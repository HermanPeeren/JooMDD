/**
 * generated by iCampus (JooMDD team) 2.9.1
 */
package de.thm.icampus.joomdd.ejsl.eJSL.impl;

import de.thm.icampus.joomdd.ejsl.eJSL.Datatype;
import de.thm.icampus.joomdd.ejsl.eJSL.EJSLPackage;
import de.thm.icampus.joomdd.ejsl.eJSL.Entity;
import de.thm.icampus.joomdd.ejsl.eJSL.Entitypackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entitypackage</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.EntitypackageImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.EntitypackageImpl#getEntitypackages <em>Entitypackages</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.EntitypackageImpl#getEntities <em>Entities</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.EntitypackageImpl#getDatatypes <em>Datatypes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EntitypackageImpl extends MinimalEObjectImpl.Container implements Entitypackage
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getEntitypackages() <em>Entitypackages</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntitypackages()
   * @generated
   * @ordered
   */
  protected EList<Entitypackage> entitypackages;

  /**
   * The cached value of the '{@link #getEntities() <em>Entities</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntities()
   * @generated
   * @ordered
   */
  protected EList<Entity> entities;

  /**
   * The cached value of the '{@link #getDatatypes() <em>Datatypes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDatatypes()
   * @generated
   * @ordered
   */
  protected EList<Datatype> datatypes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntitypackageImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EJSLPackage.Literals.ENTITYPACKAGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EJSLPackage.ENTITYPACKAGE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Entitypackage> getEntitypackages()
  {
    if (entitypackages == null)
    {
      entitypackages = new EObjectContainmentEList<Entitypackage>(Entitypackage.class, this, EJSLPackage.ENTITYPACKAGE__ENTITYPACKAGES);
    }
    return entitypackages;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Entity> getEntities()
  {
    if (entities == null)
    {
      entities = new EObjectContainmentEList<Entity>(Entity.class, this, EJSLPackage.ENTITYPACKAGE__ENTITIES);
    }
    return entities;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Datatype> getDatatypes()
  {
    if (datatypes == null)
    {
      datatypes = new EObjectContainmentEList<Datatype>(Datatype.class, this, EJSLPackage.ENTITYPACKAGE__DATATYPES);
    }
    return datatypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EJSLPackage.ENTITYPACKAGE__ENTITYPACKAGES:
        return ((InternalEList<?>)getEntitypackages()).basicRemove(otherEnd, msgs);
      case EJSLPackage.ENTITYPACKAGE__ENTITIES:
        return ((InternalEList<?>)getEntities()).basicRemove(otherEnd, msgs);
      case EJSLPackage.ENTITYPACKAGE__DATATYPES:
        return ((InternalEList<?>)getDatatypes()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EJSLPackage.ENTITYPACKAGE__NAME:
        return getName();
      case EJSLPackage.ENTITYPACKAGE__ENTITYPACKAGES:
        return getEntitypackages();
      case EJSLPackage.ENTITYPACKAGE__ENTITIES:
        return getEntities();
      case EJSLPackage.ENTITYPACKAGE__DATATYPES:
        return getDatatypes();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EJSLPackage.ENTITYPACKAGE__NAME:
        setName((String)newValue);
        return;
      case EJSLPackage.ENTITYPACKAGE__ENTITYPACKAGES:
        getEntitypackages().clear();
        getEntitypackages().addAll((Collection<? extends Entitypackage>)newValue);
        return;
      case EJSLPackage.ENTITYPACKAGE__ENTITIES:
        getEntities().clear();
        getEntities().addAll((Collection<? extends Entity>)newValue);
        return;
      case EJSLPackage.ENTITYPACKAGE__DATATYPES:
        getDatatypes().clear();
        getDatatypes().addAll((Collection<? extends Datatype>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.ENTITYPACKAGE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case EJSLPackage.ENTITYPACKAGE__ENTITYPACKAGES:
        getEntitypackages().clear();
        return;
      case EJSLPackage.ENTITYPACKAGE__ENTITIES:
        getEntities().clear();
        return;
      case EJSLPackage.ENTITYPACKAGE__DATATYPES:
        getDatatypes().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.ENTITYPACKAGE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case EJSLPackage.ENTITYPACKAGE__ENTITYPACKAGES:
        return entitypackages != null && !entitypackages.isEmpty();
      case EJSLPackage.ENTITYPACKAGE__ENTITIES:
        return entities != null && !entities.isEmpty();
      case EJSLPackage.ENTITYPACKAGE__DATATYPES:
        return datatypes != null && !datatypes.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //EntitypackageImpl
