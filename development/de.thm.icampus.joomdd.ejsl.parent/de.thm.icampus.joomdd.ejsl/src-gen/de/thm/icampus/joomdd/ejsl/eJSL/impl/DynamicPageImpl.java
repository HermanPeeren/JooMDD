/**
 * generated by iCampus (JooMDD team) 2.9.1
 */
package de.thm.icampus.joomdd.ejsl.eJSL.impl;

import de.thm.icampus.joomdd.ejsl.eJSL.Attribute;
import de.thm.icampus.joomdd.ejsl.eJSL.DynamicPage;
import de.thm.icampus.joomdd.ejsl.eJSL.EJSLPackage;
import de.thm.icampus.joomdd.ejsl.eJSL.Entity;

import java.util.Collection;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Dynamic Page</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.DynamicPageImpl#getEntities <em>Entities</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.DynamicPageImpl#getTablecolumns <em>Tablecolumns</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.DynamicPageImpl#getFilters <em>Filters</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DynamicPageImpl extends PageImpl implements DynamicPage
{
  /**
   * The cached value of the '{@link #getEntities() <em>Entities</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntities()
   * @generated
   * @ordered
   */
  protected EList<Entity> entities;

  /**
   * The cached value of the '{@link #getTablecolumns() <em>Tablecolumns</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTablecolumns()
   * @generated
   * @ordered
   */
  protected EList<Attribute> tablecolumns;

  /**
   * The cached value of the '{@link #getFilters() <em>Filters</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilters()
   * @generated
   * @ordered
   */
  protected EList<Attribute> filters;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DynamicPageImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EJSLPackage.Literals.DYNAMIC_PAGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Entity> getEntities()
  {
    if (entities == null)
    {
      entities = new EObjectResolvingEList<Entity>(Entity.class, this, EJSLPackage.DYNAMIC_PAGE__ENTITIES);
    }
    return entities;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Attribute> getTablecolumns()
  {
    if (tablecolumns == null)
    {
      tablecolumns = new EObjectResolvingEList<Attribute>(Attribute.class, this, EJSLPackage.DYNAMIC_PAGE__TABLECOLUMNS);
    }
    return tablecolumns;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Attribute> getFilters()
  {
    if (filters == null)
    {
      filters = new EObjectResolvingEList<Attribute>(Attribute.class, this, EJSLPackage.DYNAMIC_PAGE__FILTERS);
    }
    return filters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EJSLPackage.DYNAMIC_PAGE__ENTITIES:
        return getEntities();
      case EJSLPackage.DYNAMIC_PAGE__TABLECOLUMNS:
        return getTablecolumns();
      case EJSLPackage.DYNAMIC_PAGE__FILTERS:
        return getFilters();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EJSLPackage.DYNAMIC_PAGE__ENTITIES:
        getEntities().clear();
        getEntities().addAll((Collection<? extends Entity>)newValue);
        return;
      case EJSLPackage.DYNAMIC_PAGE__TABLECOLUMNS:
        getTablecolumns().clear();
        getTablecolumns().addAll((Collection<? extends Attribute>)newValue);
        return;
      case EJSLPackage.DYNAMIC_PAGE__FILTERS:
        getFilters().clear();
        getFilters().addAll((Collection<? extends Attribute>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.DYNAMIC_PAGE__ENTITIES:
        getEntities().clear();
        return;
      case EJSLPackage.DYNAMIC_PAGE__TABLECOLUMNS:
        getTablecolumns().clear();
        return;
      case EJSLPackage.DYNAMIC_PAGE__FILTERS:
        getFilters().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.DYNAMIC_PAGE__ENTITIES:
        return entities != null && !entities.isEmpty();
      case EJSLPackage.DYNAMIC_PAGE__TABLECOLUMNS:
        return tablecolumns != null && !tablecolumns.isEmpty();
      case EJSLPackage.DYNAMIC_PAGE__FILTERS:
        return filters != null && !filters.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //DynamicPageImpl
