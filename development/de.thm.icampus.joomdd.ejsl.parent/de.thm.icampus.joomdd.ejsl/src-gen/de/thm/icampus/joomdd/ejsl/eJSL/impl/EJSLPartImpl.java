/**
 * generated by iCampus (JooMDD team) 2.9.1
 */
package de.thm.icampus.joomdd.ejsl.eJSL.impl;

import de.thm.icampus.joomdd.ejsl.eJSL.Datatype;
import de.thm.icampus.joomdd.ejsl.eJSL.EJSLPackage;
import de.thm.icampus.joomdd.ejsl.eJSL.EJSLPart;
import de.thm.icampus.joomdd.ejsl.eJSL.Feature;
import de.thm.icampus.joomdd.ejsl.eJSL.Parameter;
import de.thm.icampus.joomdd.ejsl.eJSL.ParameterGroup;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Part</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.EJSLPartImpl#getDatatypes <em>Datatypes</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.EJSLPartImpl#getGlobalparameters <em>Globalparameters</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.EJSLPartImpl#getParametergroups <em>Parametergroups</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.EJSLPartImpl#getFeature <em>Feature</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EJSLPartImpl extends MinimalEObjectImpl.Container implements EJSLPart
{
  /**
   * The cached value of the '{@link #getDatatypes() <em>Datatypes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDatatypes()
   * @generated
   * @ordered
   */
  protected EList<Datatype> datatypes;

  /**
   * The cached value of the '{@link #getGlobalparameters() <em>Globalparameters</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGlobalparameters()
   * @generated
   * @ordered
   */
  protected EList<Parameter> globalparameters;

  /**
   * The cached value of the '{@link #getParametergroups() <em>Parametergroups</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParametergroups()
   * @generated
   * @ordered
   */
  protected EList<ParameterGroup> parametergroups;

  /**
   * The cached value of the '{@link #getFeature() <em>Feature</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeature()
   * @generated
   * @ordered
   */
  protected Feature feature;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EJSLPartImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EJSLPackage.Literals.EJSL_PART;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Datatype> getDatatypes()
  {
    if (datatypes == null)
    {
      datatypes = new EObjectContainmentEList<Datatype>(Datatype.class, this, EJSLPackage.EJSL_PART__DATATYPES);
    }
    return datatypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Parameter> getGlobalparameters()
  {
    if (globalparameters == null)
    {
      globalparameters = new EObjectContainmentEList<Parameter>(Parameter.class, this, EJSLPackage.EJSL_PART__GLOBALPARAMETERS);
    }
    return globalparameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ParameterGroup> getParametergroups()
  {
    if (parametergroups == null)
    {
      parametergroups = new EObjectContainmentEList<ParameterGroup>(ParameterGroup.class, this, EJSLPackage.EJSL_PART__PARAMETERGROUPS);
    }
    return parametergroups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Feature getFeature()
  {
    return feature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFeature(Feature newFeature, NotificationChain msgs)
  {
    Feature oldFeature = feature;
    feature = newFeature;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EJSLPackage.EJSL_PART__FEATURE, oldFeature, newFeature);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFeature(Feature newFeature)
  {
    if (newFeature != feature)
    {
      NotificationChain msgs = null;
      if (feature != null)
        msgs = ((InternalEObject)feature).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EJSLPackage.EJSL_PART__FEATURE, null, msgs);
      if (newFeature != null)
        msgs = ((InternalEObject)newFeature).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EJSLPackage.EJSL_PART__FEATURE, null, msgs);
      msgs = basicSetFeature(newFeature, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EJSLPackage.EJSL_PART__FEATURE, newFeature, newFeature));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EJSLPackage.EJSL_PART__DATATYPES:
        return ((InternalEList<?>)getDatatypes()).basicRemove(otherEnd, msgs);
      case EJSLPackage.EJSL_PART__GLOBALPARAMETERS:
        return ((InternalEList<?>)getGlobalparameters()).basicRemove(otherEnd, msgs);
      case EJSLPackage.EJSL_PART__PARAMETERGROUPS:
        return ((InternalEList<?>)getParametergroups()).basicRemove(otherEnd, msgs);
      case EJSLPackage.EJSL_PART__FEATURE:
        return basicSetFeature(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EJSLPackage.EJSL_PART__DATATYPES:
        return getDatatypes();
      case EJSLPackage.EJSL_PART__GLOBALPARAMETERS:
        return getGlobalparameters();
      case EJSLPackage.EJSL_PART__PARAMETERGROUPS:
        return getParametergroups();
      case EJSLPackage.EJSL_PART__FEATURE:
        return getFeature();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EJSLPackage.EJSL_PART__DATATYPES:
        getDatatypes().clear();
        getDatatypes().addAll((Collection<? extends Datatype>)newValue);
        return;
      case EJSLPackage.EJSL_PART__GLOBALPARAMETERS:
        getGlobalparameters().clear();
        getGlobalparameters().addAll((Collection<? extends Parameter>)newValue);
        return;
      case EJSLPackage.EJSL_PART__PARAMETERGROUPS:
        getParametergroups().clear();
        getParametergroups().addAll((Collection<? extends ParameterGroup>)newValue);
        return;
      case EJSLPackage.EJSL_PART__FEATURE:
        setFeature((Feature)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.EJSL_PART__DATATYPES:
        getDatatypes().clear();
        return;
      case EJSLPackage.EJSL_PART__GLOBALPARAMETERS:
        getGlobalparameters().clear();
        return;
      case EJSLPackage.EJSL_PART__PARAMETERGROUPS:
        getParametergroups().clear();
        return;
      case EJSLPackage.EJSL_PART__FEATURE:
        setFeature((Feature)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.EJSL_PART__DATATYPES:
        return datatypes != null && !datatypes.isEmpty();
      case EJSLPackage.EJSL_PART__GLOBALPARAMETERS:
        return globalparameters != null && !globalparameters.isEmpty();
      case EJSLPackage.EJSL_PART__PARAMETERGROUPS:
        return parametergroups != null && !parametergroups.isEmpty();
      case EJSLPackage.EJSL_PART__FEATURE:
        return feature != null;
    }
    return super.eIsSet(featureID);
  }

} //EJSLPartImpl
