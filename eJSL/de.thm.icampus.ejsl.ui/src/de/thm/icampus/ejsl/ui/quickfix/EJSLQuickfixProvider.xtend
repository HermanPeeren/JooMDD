/*
* generated by Xtext
*/
package de.thm.icampus.ejsl.ui.quickfix

import de.thm.icampus.ejsl.validation.EJSLValidator

import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.validation.Issue

/**
 * Custom quickfixes.
 *
 * see http://www.eclipse.org/Xtext/documentation.html#quickfixes
 */
class EJSLQuickfixProvider extends org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider {

	@Fix(EJSLValidator::AMBIGUOUS_ENTITY)
	def capitalizeNamealternative(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Add ID to Entity', 'Change the name.', 'test.png') [
			context |
			val xtextDocument = context.xtextDocument		
			xtextDocument.replace(issue.offset+issue.length, 1, "_ID_X ")
		]
	}
	
	@Fix(EJSLValidator::AMBIGUOUS_LANGUAGE)
	def addID(Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, 'Delete Language', 'Remove the entity.', 'upcase.png')[
			context | 
			val xtextDocument = context.xtextDocument
			System.out.print(acceptor.toString)
			val lineofffset = xtextDocument.getLineOffset(issue.lineNumber - 1)
			xtextDocument.replace(lineofffset, 20, "")
				
		]
	}
	
	
	
	@Fix(EJSLValidator::INVALID_AUTHOR_URL)
	def validURL(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Set "http" before', 'Setting HTTP:// before unvalid URL', 'upcase.png') [
			context | 
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset, 1, "\"http://") // http:// vor dem "-Zeichen
		]
		acceptor.accept(issue, 'Set "https" before', 'Setting HTTPS:// before unvalid URL', 'upcase.png') [
			context | 
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset, 1, "\"https://") // https:// vor dem "-Zeichen
		]
	}
}
