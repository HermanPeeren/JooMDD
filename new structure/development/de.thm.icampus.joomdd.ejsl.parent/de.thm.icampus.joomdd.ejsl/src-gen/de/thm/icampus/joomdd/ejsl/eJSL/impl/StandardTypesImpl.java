/**
 * generated by iCampus (JooMDD team) 2.9.1
 */
package de.thm.icampus.joomdd.ejsl.eJSL.impl;

import de.thm.icampus.joomdd.ejsl.eJSL.EJSLPackage;
import de.thm.icampus.joomdd.ejsl.eJSL.StandardTypeKinds;
import de.thm.icampus.joomdd.ejsl.eJSL.StandardTypes;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Standard Types</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.StandardTypesImpl#getType <em>Type</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.StandardTypesImpl#isNotnull <em>Notnull</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.StandardTypesImpl#isDefault <em>Default</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.StandardTypesImpl#isAutoincrement <em>Autoincrement</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StandardTypesImpl extends TypeImpl implements StandardTypes
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final StandardTypeKinds TYPE_EDEFAULT = StandardTypeKinds.INTEGER;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected StandardTypeKinds type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #isNotnull() <em>Notnull</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNotnull()
   * @generated
   * @ordered
   */
  protected static final boolean NOTNULL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNotnull() <em>Notnull</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNotnull()
   * @generated
   * @ordered
   */
  protected boolean notnull = NOTNULL_EDEFAULT;

  /**
   * The default value of the '{@link #isDefault() <em>Default</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDefault()
   * @generated
   * @ordered
   */
  protected static final boolean DEFAULT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDefault() <em>Default</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDefault()
   * @generated
   * @ordered
   */
  protected boolean default_ = DEFAULT_EDEFAULT;

  /**
   * The default value of the '{@link #isAutoincrement() <em>Autoincrement</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAutoincrement()
   * @generated
   * @ordered
   */
  protected static final boolean AUTOINCREMENT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isAutoincrement() <em>Autoincrement</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAutoincrement()
   * @generated
   * @ordered
   */
  protected boolean autoincrement = AUTOINCREMENT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StandardTypesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EJSLPackage.Literals.STANDARD_TYPES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StandardTypeKinds getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(StandardTypeKinds newType)
  {
    StandardTypeKinds oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EJSLPackage.STANDARD_TYPES__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isNotnull()
  {
    return notnull;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNotnull(boolean newNotnull)
  {
    boolean oldNotnull = notnull;
    notnull = newNotnull;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EJSLPackage.STANDARD_TYPES__NOTNULL, oldNotnull, notnull));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isDefault()
  {
    return default_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDefault(boolean newDefault)
  {
    boolean oldDefault = default_;
    default_ = newDefault;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EJSLPackage.STANDARD_TYPES__DEFAULT, oldDefault, default_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isAutoincrement()
  {
    return autoincrement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAutoincrement(boolean newAutoincrement)
  {
    boolean oldAutoincrement = autoincrement;
    autoincrement = newAutoincrement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EJSLPackage.STANDARD_TYPES__AUTOINCREMENT, oldAutoincrement, autoincrement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EJSLPackage.STANDARD_TYPES__TYPE:
        return getType();
      case EJSLPackage.STANDARD_TYPES__NOTNULL:
        return isNotnull();
      case EJSLPackage.STANDARD_TYPES__DEFAULT:
        return isDefault();
      case EJSLPackage.STANDARD_TYPES__AUTOINCREMENT:
        return isAutoincrement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EJSLPackage.STANDARD_TYPES__TYPE:
        setType((StandardTypeKinds)newValue);
        return;
      case EJSLPackage.STANDARD_TYPES__NOTNULL:
        setNotnull((Boolean)newValue);
        return;
      case EJSLPackage.STANDARD_TYPES__DEFAULT:
        setDefault((Boolean)newValue);
        return;
      case EJSLPackage.STANDARD_TYPES__AUTOINCREMENT:
        setAutoincrement((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.STANDARD_TYPES__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case EJSLPackage.STANDARD_TYPES__NOTNULL:
        setNotnull(NOTNULL_EDEFAULT);
        return;
      case EJSLPackage.STANDARD_TYPES__DEFAULT:
        setDefault(DEFAULT_EDEFAULT);
        return;
      case EJSLPackage.STANDARD_TYPES__AUTOINCREMENT:
        setAutoincrement(AUTOINCREMENT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.STANDARD_TYPES__TYPE:
        return type != TYPE_EDEFAULT;
      case EJSLPackage.STANDARD_TYPES__NOTNULL:
        return notnull != NOTNULL_EDEFAULT;
      case EJSLPackage.STANDARD_TYPES__DEFAULT:
        return default_ != DEFAULT_EDEFAULT;
      case EJSLPackage.STANDARD_TYPES__AUTOINCREMENT:
        return autoincrement != AUTOINCREMENT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", notnull: ");
    result.append(notnull);
    result.append(", default: ");
    result.append(default_);
    result.append(", autoincrement: ");
    result.append(autoincrement);
    result.append(')');
    return result.toString();
  }

} //StandardTypesImpl
