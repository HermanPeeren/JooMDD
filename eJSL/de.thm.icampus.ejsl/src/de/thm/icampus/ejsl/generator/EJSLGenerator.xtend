/*
 * generated by Xtext
 */
package de.thm.icampus.ejsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess

import de.thm.icampus.ejsl.generator.ps.JoomlaExtensionGenerator.ExtensionGeneratorClient
import de.thm.icampus.ejsl.ressourceTransformator.RessourceTransformer
import de.thm.icampus.ejsl.generator.ps.ExtensionGenerator
import de.thm.icampus.ejsl.generator.ps.EntityGenerator
import de.thm.icampus.ejsl.generator.ps.PageGenerator
import de.thm.icampus.ejsl.eJSL.EJSLModel
import de.thm.icampus.ejsl.eJSL.CMSExtension
import de.thm.icampus.ejsl.eJSL.EJSLModel

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class EJSLGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		
		
		for ( e : resource.allContents.toIterable.filter(typeof(EJSLModel))) {
			
			var EJSLModel domainModel = e as EJSLModel ;
			switch(domainModel.ejslPart){
				CMSExtension:
				{
					var CMSExtension extensionPart = domainModel.ejslPart as CMSExtension
					 var RessourceTransformer trans = new RessourceTransformer(e)
			 		trans.dotransformation
					var ExtensionGenerator mainExtensionGen = new ExtensionGenerator(extensionPart.extensions)
					mainExtensionGen.dogenerate("Extensions", fsa)
					var EntityGenerator mainEntitiesGen = new EntityGenerator(extensionPart.feature.entities)
					mainEntitiesGen.dogenerate("Entities",fsa)
					var PageGenerator mainPageGen = new PageGenerator(extensionPart.feature.pages)
					mainPageGen.dogenerate("Pages",fsa)
				}
			}
			
		}
	}
}
