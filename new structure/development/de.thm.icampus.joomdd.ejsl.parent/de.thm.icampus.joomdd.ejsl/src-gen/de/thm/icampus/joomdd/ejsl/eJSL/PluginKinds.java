/**
 * generated by iCampus (JooMDD team) 2.9.1
 */
package de.thm.icampus.joomdd.ejsl.eJSL;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Plugin Kinds</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see de.thm.icampus.joomdd.ejsl.eJSL.EJSLPackage#getPluginKinds()
 * @model
 * @generated
 */
public enum PluginKinds implements Enumerator
{
  /**
   * The '<em><b>Authenticate</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #AUTHENTICATE_VALUE
   * @generated
   * @ordered
   */
  AUTHENTICATE(0, "authenticate", "authenticate"),

  /**
   * The '<em><b>Captcha</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CAPTCHA_VALUE
   * @generated
   * @ordered
   */
  CAPTCHA(1, "captcha", "captcha"),

  /**
   * The '<em><b>Content</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CONTENT_VALUE
   * @generated
   * @ordered
   */
  CONTENT(2, "content", "content"),

  /**
   * The '<em><b>Contact</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CONTACT_VALUE
   * @generated
   * @ordered
   */
  CONTACT(3, "contact", "contact"),

  /**
   * The '<em><b>Editors</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EDITORS_VALUE
   * @generated
   * @ordered
   */
  EDITORS(4, "editors", "editors"),

  /**
   * The '<em><b>Extensions</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EXTENSIONS_VALUE
   * @generated
   * @ordered
   */
  EXTENSIONS(5, "extensions", "extensions"),

  /**
   * The '<em><b>Finder</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FINDER_VALUE
   * @generated
   * @ordered
   */
  FINDER(6, "finder", "finder"),

  /**
   * The '<em><b>Quick icons</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #QUICK_ICONS_VALUE
   * @generated
   * @ordered
   */
  QUICK_ICONS(7, "quick_icons", "quick_icons"),

  /**
   * The '<em><b>Search</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SEARCH_VALUE
   * @generated
   * @ordered
   */
  SEARCH(8, "search", "search"),

  /**
   * The '<em><b>System</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SYSTEM_VALUE
   * @generated
   * @ordered
   */
  SYSTEM(9, "system", "system"),

  /**
   * The '<em><b>User</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #USER_VALUE
   * @generated
   * @ordered
   */
  USER(10, "user", "user"),

  /**
   * The '<em><b>Xml rpc</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #XML_RPC_VALUE
   * @generated
   * @ordered
   */
  XML_RPC(11, "xml_rpc", "xml_rpc");

  /**
   * The '<em><b>Authenticate</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Authenticate</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #AUTHENTICATE
   * @model name="authenticate"
   * @generated
   * @ordered
   */
  public static final int AUTHENTICATE_VALUE = 0;

  /**
   * The '<em><b>Captcha</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Captcha</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #CAPTCHA
   * @model name="captcha"
   * @generated
   * @ordered
   */
  public static final int CAPTCHA_VALUE = 1;

  /**
   * The '<em><b>Content</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Content</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #CONTENT
   * @model name="content"
   * @generated
   * @ordered
   */
  public static final int CONTENT_VALUE = 2;

  /**
   * The '<em><b>Contact</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Contact</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #CONTACT
   * @model name="contact"
   * @generated
   * @ordered
   */
  public static final int CONTACT_VALUE = 3;

  /**
   * The '<em><b>Editors</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Editors</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #EDITORS
   * @model name="editors"
   * @generated
   * @ordered
   */
  public static final int EDITORS_VALUE = 4;

  /**
   * The '<em><b>Extensions</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Extensions</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #EXTENSIONS
   * @model name="extensions"
   * @generated
   * @ordered
   */
  public static final int EXTENSIONS_VALUE = 5;

  /**
   * The '<em><b>Finder</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Finder</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #FINDER
   * @model name="finder"
   * @generated
   * @ordered
   */
  public static final int FINDER_VALUE = 6;

  /**
   * The '<em><b>Quick icons</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Quick icons</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #QUICK_ICONS
   * @model name="quick_icons"
   * @generated
   * @ordered
   */
  public static final int QUICK_ICONS_VALUE = 7;

  /**
   * The '<em><b>Search</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Search</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #SEARCH
   * @model name="search"
   * @generated
   * @ordered
   */
  public static final int SEARCH_VALUE = 8;

  /**
   * The '<em><b>System</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>System</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #SYSTEM
   * @model name="system"
   * @generated
   * @ordered
   */
  public static final int SYSTEM_VALUE = 9;

  /**
   * The '<em><b>User</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>User</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #USER
   * @model name="user"
   * @generated
   * @ordered
   */
  public static final int USER_VALUE = 10;

  /**
   * The '<em><b>Xml rpc</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Xml rpc</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #XML_RPC
   * @model name="xml_rpc"
   * @generated
   * @ordered
   */
  public static final int XML_RPC_VALUE = 11;

  /**
   * An array of all the '<em><b>Plugin Kinds</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final PluginKinds[] VALUES_ARRAY =
    new PluginKinds[]
    {
      AUTHENTICATE,
      CAPTCHA,
      CONTENT,
      CONTACT,
      EDITORS,
      EXTENSIONS,
      FINDER,
      QUICK_ICONS,
      SEARCH,
      SYSTEM,
      USER,
      XML_RPC,
    };

  /**
   * A public read-only list of all the '<em><b>Plugin Kinds</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<PluginKinds> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Plugin Kinds</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static PluginKinds get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      PluginKinds result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Plugin Kinds</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static PluginKinds getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      PluginKinds result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Plugin Kinds</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static PluginKinds get(int value)
  {
    switch (value)
    {
      case AUTHENTICATE_VALUE: return AUTHENTICATE;
      case CAPTCHA_VALUE: return CAPTCHA;
      case CONTENT_VALUE: return CONTENT;
      case CONTACT_VALUE: return CONTACT;
      case EDITORS_VALUE: return EDITORS;
      case EXTENSIONS_VALUE: return EXTENSIONS;
      case FINDER_VALUE: return FINDER;
      case QUICK_ICONS_VALUE: return QUICK_ICONS;
      case SEARCH_VALUE: return SEARCH;
      case SYSTEM_VALUE: return SYSTEM;
      case USER_VALUE: return USER;
      case XML_RPC_VALUE: return XML_RPC;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private PluginKinds(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //PluginKinds
