import 'EJSL.ecore'

package eJSL

context EJSLModel
--
-- example invariant with a custom error message to verify that
-- the 'name' property of all 'eJSL::EJSLModel' instances is non-null
--
inv NonNull_name('The \'name\' property of "' + self.toString() + '" is null'):
    name <> null

context Entity

-- Check if entity names are unique
inv uniqueEntity:
Entity.allInstances()->forAll(e1, e2| e1 <> e2 implies e1.name <> e2.name and e1.name <> '^' + e2.name)
            
-- Check if attribute identifiers are unique
inv uniqueAttributeIdentifier:
self.attributes -> forAll(a1, a2| a1 <> a2 implies a1.name <> a2.name and a1.name <> '^' + a2.name)

-- Check if entity does not extend itself
inv entityDoesNotExtendItself: 
self.supertype -> excludes(self)

-- Check if at least one unique (primary) attribute exists
inv primaryAttributeExists:
-- To do: Check if entity does not extend another one, if so, check if extended entity has a unique attribute
self.attributes -> exists(isunique)

-- Check if no generalization cycle exists (transitive closure)    
inv noGeneralizationCycles: 
self.supertype->closure(supertype)->excludes(self)

-- To do: Check if reference multiplicities are consistent (min <= max)
-- To do: Check if referenced entity exists
-- To do: Check if references have no cycles
-- To do: Check if AutoIncrement is used for suitable types
-- To do: Check if attribute types are consistent in references

context Reference
-- To do: Check if min/max values are -1, 0, and 1
inv allowedMinValues:
Set{'0','1','-1'} -> includes(self.lower)

-- To do: Check if min/max values are -1, 0, and 1
inv allowedMaxValues:
Set{'0','1','-1'} -> includes(self.upper)

-- To do: Check if referencedEntity and referencedEntityAttribute are consistent
-- To do: Check for identifiers which are not allowed (e.g. ordering, description)
-- To do: Check if reference is a primary (unique) attribute

endpackage