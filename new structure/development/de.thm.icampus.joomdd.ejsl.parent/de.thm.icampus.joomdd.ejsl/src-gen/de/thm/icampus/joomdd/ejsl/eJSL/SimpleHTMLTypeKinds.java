/**
 * generated by iCampus (JooMDD team) 2.9.1
 */
package de.thm.icampus.joomdd.ejsl.eJSL;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Simple HTML Type Kinds</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see de.thm.icampus.joomdd.ejsl.eJSL.EJSLPackage#getSimpleHTMLTypeKinds()
 * @model
 * @generated
 */
public enum SimpleHTMLTypeKinds implements Enumerator
{
  /**
   * The '<em><b>Integer</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #INTEGER_VALUE
   * @generated
   * @ordered
   */
  INTEGER(0, "Integer", "Integer"),

  /**
   * The '<em><b>Yes No Buttons</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #YES_NO_BUTTONS_VALUE
   * @generated
   * @ordered
   */
  YES_NO_BUTTONS(1, "Yes_No_Buttons", "Yes_No_Buttons"),

  /**
   * The '<em><b>Textarea</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TEXTAREA_VALUE
   * @generated
   * @ordered
   */
  TEXTAREA(2, "Textarea", "Textarea"),

  /**
   * The '<em><b>Text Field</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TEXT_FIELD_VALUE
   * @generated
   * @ordered
   */
  TEXT_FIELD(3, "Text_Field", "Text_Field"),

  /**
   * The '<em><b>Datepicker</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DATEPICKER_VALUE
   * @generated
   * @ordered
   */
  DATEPICKER(4, "Datepicker", "Datepicker"),

  /**
   * The '<em><b>Imagepicker</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IMAGEPICKER_VALUE
   * @generated
   * @ordered
   */
  IMAGEPICKER(5, "Imagepicker", "Imagepicker"),

  /**
   * The '<em><b>Filepicker</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FILEPICKER_VALUE
   * @generated
   * @ordered
   */
  FILEPICKER(6, "Filepicker", "Filepicker"),

  /**
   * The '<em><b>Text Field NE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TEXT_FIELD_NE_VALUE
   * @generated
   * @ordered
   */
  TEXT_FIELD_NE(7, "Text_Field_NE", "Text_Field_NE"),

  /**
   * The '<em><b>Editor</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EDITOR_VALUE
   * @generated
   * @ordered
   */
  EDITOR(8, "Editor", "Editor");

  /**
   * The '<em><b>Integer</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Integer</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #INTEGER
   * @model name="Integer"
   * @generated
   * @ordered
   */
  public static final int INTEGER_VALUE = 0;

  /**
   * The '<em><b>Yes No Buttons</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Yes No Buttons</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #YES_NO_BUTTONS
   * @model name="Yes_No_Buttons"
   * @generated
   * @ordered
   */
  public static final int YES_NO_BUTTONS_VALUE = 1;

  /**
   * The '<em><b>Textarea</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Textarea</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #TEXTAREA
   * @model name="Textarea"
   * @generated
   * @ordered
   */
  public static final int TEXTAREA_VALUE = 2;

  /**
   * The '<em><b>Text Field</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Text Field</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #TEXT_FIELD
   * @model name="Text_Field"
   * @generated
   * @ordered
   */
  public static final int TEXT_FIELD_VALUE = 3;

  /**
   * The '<em><b>Datepicker</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Datepicker</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #DATEPICKER
   * @model name="Datepicker"
   * @generated
   * @ordered
   */
  public static final int DATEPICKER_VALUE = 4;

  /**
   * The '<em><b>Imagepicker</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Imagepicker</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #IMAGEPICKER
   * @model name="Imagepicker"
   * @generated
   * @ordered
   */
  public static final int IMAGEPICKER_VALUE = 5;

  /**
   * The '<em><b>Filepicker</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Filepicker</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #FILEPICKER
   * @model name="Filepicker"
   * @generated
   * @ordered
   */
  public static final int FILEPICKER_VALUE = 6;

  /**
   * The '<em><b>Text Field NE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Text Field NE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #TEXT_FIELD_NE
   * @model name="Text_Field_NE"
   * @generated
   * @ordered
   */
  public static final int TEXT_FIELD_NE_VALUE = 7;

  /**
   * The '<em><b>Editor</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Editor</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #EDITOR
   * @model name="Editor"
   * @generated
   * @ordered
   */
  public static final int EDITOR_VALUE = 8;

  /**
   * An array of all the '<em><b>Simple HTML Type Kinds</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final SimpleHTMLTypeKinds[] VALUES_ARRAY =
    new SimpleHTMLTypeKinds[]
    {
      INTEGER,
      YES_NO_BUTTONS,
      TEXTAREA,
      TEXT_FIELD,
      DATEPICKER,
      IMAGEPICKER,
      FILEPICKER,
      TEXT_FIELD_NE,
      EDITOR,
    };

  /**
   * A public read-only list of all the '<em><b>Simple HTML Type Kinds</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<SimpleHTMLTypeKinds> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Simple HTML Type Kinds</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static SimpleHTMLTypeKinds get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      SimpleHTMLTypeKinds result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Simple HTML Type Kinds</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static SimpleHTMLTypeKinds getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      SimpleHTMLTypeKinds result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Simple HTML Type Kinds</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static SimpleHTMLTypeKinds get(int value)
  {
    switch (value)
    {
      case INTEGER_VALUE: return INTEGER;
      case YES_NO_BUTTONS_VALUE: return YES_NO_BUTTONS;
      case TEXTAREA_VALUE: return TEXTAREA;
      case TEXT_FIELD_VALUE: return TEXT_FIELD;
      case DATEPICKER_VALUE: return DATEPICKER;
      case IMAGEPICKER_VALUE: return IMAGEPICKER;
      case FILEPICKER_VALUE: return FILEPICKER;
      case TEXT_FIELD_NE_VALUE: return TEXT_FIELD_NE;
      case EDITOR_VALUE: return EDITOR;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private SimpleHTMLTypeKinds(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //SimpleHTMLTypeKinds
