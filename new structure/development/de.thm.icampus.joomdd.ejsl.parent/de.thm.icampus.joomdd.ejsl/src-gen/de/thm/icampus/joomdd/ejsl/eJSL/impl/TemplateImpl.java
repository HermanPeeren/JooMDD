/**
 * generated by iCampus (JooMDD team) 2.9.1
 */
package de.thm.icampus.joomdd.ejsl.eJSL.impl;

import de.thm.icampus.joomdd.ejsl.eJSL.CssBlock;
import de.thm.icampus.joomdd.ejsl.eJSL.EJSLPackage;
import de.thm.icampus.joomdd.ejsl.eJSL.Parameter;
import de.thm.icampus.joomdd.ejsl.eJSL.Position;
import de.thm.icampus.joomdd.ejsl.eJSL.Template;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Template</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.TemplateImpl#getLocalparameters <em>Localparameters</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.TemplateImpl#getPositions <em>Positions</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.TemplateImpl#getCssblocks <em>Cssblocks</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TemplateImpl extends ExtensionImpl implements Template
{
  /**
   * The cached value of the '{@link #getLocalparameters() <em>Localparameters</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocalparameters()
   * @generated
   * @ordered
   */
  protected EList<Parameter> localparameters;

  /**
   * The cached value of the '{@link #getPositions() <em>Positions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPositions()
   * @generated
   * @ordered
   */
  protected EList<Position> positions;

  /**
   * The cached value of the '{@link #getCssblocks() <em>Cssblocks</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCssblocks()
   * @generated
   * @ordered
   */
  protected EList<CssBlock> cssblocks;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TemplateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EJSLPackage.Literals.TEMPLATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Parameter> getLocalparameters()
  {
    if (localparameters == null)
    {
      localparameters = new EObjectContainmentEList<Parameter>(Parameter.class, this, EJSLPackage.TEMPLATE__LOCALPARAMETERS);
    }
    return localparameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Position> getPositions()
  {
    if (positions == null)
    {
      positions = new EObjectContainmentEList<Position>(Position.class, this, EJSLPackage.TEMPLATE__POSITIONS);
    }
    return positions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<CssBlock> getCssblocks()
  {
    if (cssblocks == null)
    {
      cssblocks = new EObjectContainmentEList<CssBlock>(CssBlock.class, this, EJSLPackage.TEMPLATE__CSSBLOCKS);
    }
    return cssblocks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EJSLPackage.TEMPLATE__LOCALPARAMETERS:
        return ((InternalEList<?>)getLocalparameters()).basicRemove(otherEnd, msgs);
      case EJSLPackage.TEMPLATE__POSITIONS:
        return ((InternalEList<?>)getPositions()).basicRemove(otherEnd, msgs);
      case EJSLPackage.TEMPLATE__CSSBLOCKS:
        return ((InternalEList<?>)getCssblocks()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EJSLPackage.TEMPLATE__LOCALPARAMETERS:
        return getLocalparameters();
      case EJSLPackage.TEMPLATE__POSITIONS:
        return getPositions();
      case EJSLPackage.TEMPLATE__CSSBLOCKS:
        return getCssblocks();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EJSLPackage.TEMPLATE__LOCALPARAMETERS:
        getLocalparameters().clear();
        getLocalparameters().addAll((Collection<? extends Parameter>)newValue);
        return;
      case EJSLPackage.TEMPLATE__POSITIONS:
        getPositions().clear();
        getPositions().addAll((Collection<? extends Position>)newValue);
        return;
      case EJSLPackage.TEMPLATE__CSSBLOCKS:
        getCssblocks().clear();
        getCssblocks().addAll((Collection<? extends CssBlock>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.TEMPLATE__LOCALPARAMETERS:
        getLocalparameters().clear();
        return;
      case EJSLPackage.TEMPLATE__POSITIONS:
        getPositions().clear();
        return;
      case EJSLPackage.TEMPLATE__CSSBLOCKS:
        getCssblocks().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.TEMPLATE__LOCALPARAMETERS:
        return localparameters != null && !localparameters.isEmpty();
      case EJSLPackage.TEMPLATE__POSITIONS:
        return positions != null && !positions.isEmpty();
      case EJSLPackage.TEMPLATE__CSSBLOCKS:
        return cssblocks != null && !cssblocks.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //TemplateImpl
