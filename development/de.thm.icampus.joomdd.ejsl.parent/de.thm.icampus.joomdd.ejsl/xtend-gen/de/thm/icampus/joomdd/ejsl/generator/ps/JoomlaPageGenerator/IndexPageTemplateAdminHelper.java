package de.thm.icampus.joomdd.ejsl.generator.ps.JoomlaPageGenerator;

import de.thm.icampus.joomdd.ejsl.eJSL.Attribute;
import de.thm.icampus.joomdd.ejsl.eJSL.DetailsPage;
import de.thm.icampus.joomdd.ejsl.eJSL.Entity;
import de.thm.icampus.joomdd.ejsl.generator.pi.ExtendedEntity.ExtendedAttribute;
import de.thm.icampus.joomdd.ejsl.generator.pi.ExtendedExtension.ExtendedComponent;
import de.thm.icampus.joomdd.ejsl.generator.pi.ExtendedPage.ExtendedDynamicPage;
import de.thm.icampus.joomdd.ejsl.generator.ps.JoomlaUtil.Slug;
import org.eclipse.emf.common.util.EList;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.StringExtensions;

@SuppressWarnings("all")
public class IndexPageTemplateAdminHelper {
  private ExtendedDynamicPage indexpage;
  
  private ExtendedComponent com;
  
  private String sec;
  
  private DetailsPage details;
  
  public IndexPageTemplateAdminHelper(final ExtendedDynamicPage dp, final ExtendedComponent cp, final String section) {
    this.indexpage = dp;
    this.com = cp;
    this.sec = section;
    DetailsPage _pageForDetails = Slug.getPageForDetails(this.indexpage, this.com);
    this.details = _pageForDetails;
  }
  
  public CharSequence genAdminControllerContructer() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append("* Constructor.");
    _builder.newLine();
    _builder.append("*");
    _builder.newLine();
    _builder.append("* @param   array  $config\tAn optional associative array of configuration settings.");
    _builder.newLine();
    _builder.append("* @return  ");
    String _name = this.com.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "");
    _builder.append("Controller");
    String _name_1 = this.indexpage.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "");
    _builder.newLineIfNotEmpty();
    _builder.append("* @see     JController");
    _builder.newLine();
    _builder.append("* @since   1.6");
    _builder.newLine();
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append("*/");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("public function __construct($config = array())");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("parent::__construct($config);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("   ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminControllerGetModel() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Overwrite the  getModel.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @since\t1.6");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("public function getModel($name = \'");
    String _name = this.details.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "");
    _builder.append("\', $prefix = \'");
    String _name_1 = this.com.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "");
    _builder.append("Model\', $config = array())");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$model = parent::getModel($name, $prefix, array(\'ignore_request\' => true));");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("return $model;");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminControllerSaveOrdering() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append("* save the order.");
    _builder.newLine();
    _builder.append("*");
    _builder.newLine();
    _builder.append("* @return  Integer");
    _builder.newLine();
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public function saveordering(){");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$app = JFactory::getApplication();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$ids = $app->input->get(\'cid\', array(), \'array\');");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$model = $this->getModel(\'");
    String _name = this.indexpage.getName();
    String _lowerCase = _name.toLowerCase();
    _builder.append(_lowerCase, "        ");
    _builder.append("\');");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("$result = $model->saveOrdering($ids);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if($result)");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("echo new JResponseJson($result);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminModelConstruct() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append("* Constructor.");
    _builder.newLine();
    _builder.append("*");
    _builder.newLine();
    _builder.append("* @param    array    An optional associative array of configuration settings.");
    _builder.newLine();
    _builder.append("* @see        JController");
    _builder.newLine();
    _builder.append("* @since    1.6");
    _builder.newLine();
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public function __construct($config = array()) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if (empty($config[\'filter_fields\'])) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("$config[\'filter_fields\'] = array(");
    _builder.newLine();
    _builder.append("                                ");
    _builder.append("\'id\', \'a.id\',");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("\'ordering\', \'a.ordering\',");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("\'state\', \'a.state\',");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("\'created_by\', \'a.created_by\'");
    _builder.newLine();
    _builder.append("                ");
    _builder.append(", \'published\', \'a.published\'");
    _builder.newLine();
    {
      EList<ExtendedAttribute> _allAttributeOfFilterAndColum = this.indexpage.getAllAttributeOfFilterAndColum();
      for(final ExtendedAttribute attr : _allAttributeOfFilterAndColum) {
        _builder.append("                ");
        _builder.append(",\'");
        String _name = attr.getName();
        String _lowerCase = _name.toLowerCase();
        _builder.append(_lowerCase, "                ");
        _builder.append("\', \'a.");
        String _name_1 = attr.getName();
        String _lowerCase_1 = _name_1.toLowerCase();
        _builder.append(_lowerCase_1, "                ");
        _builder.append("\'");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("                ");
    _builder.append(");}");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("parent::__construct($config);");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminModelGetListQuery(final EList<Attribute> filters) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Build an SQL query to load the list data.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @return\tJDatabaseQuery");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @since\t1.6");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("protected function getListQuery() {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("// Create a new query object.");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$db = $this->getDbo();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$query = $db->getQuery(true);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("// Select the required fields from the table.");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$query->select(");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("$this->getState(");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("\'list.select\', \'a.*\'");
    _builder.newLine();
    _builder.append("                ");
    _builder.append(")");
    _builder.newLine();
    _builder.append("        ");
    _builder.append(");");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$query->from(\'`#__");
    String _name = this.com.getName();
    String _lowerCase = _name.toLowerCase();
    _builder.append(_lowerCase, "        ");
    _builder.append("_");
    EList<Entity> _entities = this.indexpage.getEntities();
    Entity _get = _entities.get(0);
    String _name_1 = _get.getName();
    String _lowerCase_1 = _name_1.toLowerCase();
    _builder.append(_lowerCase_1, "        ");
    _builder.append("` AS a\');");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("// Join over the users for the checked out user");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$query->select(\"uc.name AS editor\");");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$query->join(\"LEFT\", \"#__users AS uc ON uc.id=a.checked_out\");");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Join over the user field \'created_by\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$query->select(\'created_by.name AS created_by\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$query->join(\'LEFT\', \'#__users AS created_by ON created_by.id = a.created_by\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Join over the user field \'user\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$query->select(\'user.name AS user\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$query->join(\'LEFT\', \'#__users AS user ON user.id =  a.created_by\');");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Filter by published state");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$published = $this->getState(\'filter.state\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("if (is_numeric($published)) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("$query->where(\'a.state = \' . (int) $published);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("} else if ($published === \'\') {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("$query->where(\'(a.state IN (0, 1))\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Filter by User ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$created_by = $this->getState(\'filter.created_by\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("if (!empty($created_by)) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("$query->where(\"a.created_by = \'$created_by\'\");");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    {
      EList<ExtendedAttribute> _extendFiltersList = this.indexpage.getExtendFiltersList();
      for(final ExtendedAttribute attr : _extendFiltersList) {
        _builder.append("        ");
        _builder.append("// Filter by ");
        String _name_2 = attr.getName();
        _builder.append(_name_2, "        ");
        _builder.append(" ");
        _builder.newLineIfNotEmpty();
        _builder.append("$");
        String _name_3 = attr.getName();
        _builder.append(_name_3, "");
        _builder.append(" = $this->getState(\'filter.");
        String _name_4 = attr.getName();
        _builder.append(_name_4, "");
        _builder.append("\');");
        _builder.newLineIfNotEmpty();
        _builder.append("if (!empty($");
        String _name_5 = attr.getName();
        _builder.append(_name_5, "");
        _builder.append(")) {");
        _builder.newLineIfNotEmpty();
        _builder.append("            ");
        _builder.append("$query->where(\"a.");
        String _name_6 = attr.getName();
        _builder.append(_name_6, "            ");
        _builder.append(" = \'$");
        String _name_7 = attr.getName();
        _builder.append(_name_7, "            ");
        _builder.append("\'\");");
        _builder.newLineIfNotEmpty();
        _builder.append("            ");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Filter by search in attribute");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$search = $this->getState(\'filter.search\');");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if (!empty($search)) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("if (stripos($search, \'id:\') === 0) {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("$query->where(\'a.id = \' . (int) substr($search, 3));");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("$search = $db->Quote(\'%\' . $db->escape($search, true) . \'%\');");
    _builder.newLine();
    {
      boolean _isEmpty = filters.isEmpty();
      boolean _not = (!_isEmpty);
      if (_not) {
        _builder.append("                ");
        _builder.append("$query->where(\'( a.");
        Attribute _get_1 = filters.get(0);
        String _name_8 = _get_1.getName();
        String _lowerCase_2 = _name_8.toLowerCase();
        _builder.append(_lowerCase_2, "                ");
        _builder.append(" LIKE \'.$search. ");
        _builder.newLineIfNotEmpty();
        {
          EList<Attribute> _filters = this.indexpage.getFilters();
          for(final Attribute attr_1 : _filters) {
            {
              int _indexOf = filters.indexOf(attr_1);
              boolean _greaterThan = (_indexOf > 0);
              if (_greaterThan) {
                _builder.append("                ");
                _builder.append("\'OR  a.");
                String _name_9 = attr_1.getName();
                String _lowerCase_3 = _name_9.toLowerCase();
                _builder.append(_lowerCase_3, "                ");
                _builder.append(" LIKE \'.$search.");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.append("                ");
        _builder.append(" ");
        _builder.newLine();
        _builder.append("                ");
        _builder.append(" ");
        _builder.append("\')\');   ");
        _builder.newLine();
      }
    }
    _builder.append("            ");
    _builder.append("}}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("// Add the list ordering clause.");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$orderCol = $this->state->get(\'list.ordering\');");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$orderDirn = $this->state->get(\'list.direction\');");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if ($orderCol && $orderDirn) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("$query->order($db->escape($orderCol . \' \' . $orderDirn));");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return $query;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("            ");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminModelGetItem() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Method to get a single record.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @param\tinteger\tThe id of the primary key.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @return\tmixed\tObject on success, false on failure.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @since\t1.6");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("public function getItems() {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$items = parent::getItems();");
    _builder.newLine();
    _builder.append("        ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return $items;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminModelSaveOrder() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append("* Function to save the new Order of the Profile");
    _builder.newLine();
    _builder.append("*");
    _builder.newLine();
    _builder.append("* @param   Array  $datas_ID  content the ID in the new Ordering");
    _builder.newLine();
    _builder.append("*");
    _builder.newLine();
    _builder.append("* @return array including headers");
    _builder.newLine();
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public function saveOrdering($datas_ID)");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$db = JFactory::getDbo();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$query = $db->getQuery(true);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$statement = \'Update #__");
    String _name = this.com.getName();
    String _lowerCase = _name.toLowerCase();
    _builder.append(_lowerCase, "        ");
    _builder.append("_");
    EList<Entity> _entities = this.indexpage.getEntities();
    Entity _get = _entities.get(0);
    String _name_1 = _get.getName();
    String _lowerCase_1 = _name_1.toLowerCase();
    _builder.append(_lowerCase_1, "        ");
    _builder.append(" Set `ordering` = CASE\';");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("foreach ($datas_ID  as $order => $profileID)");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("$statement .= \' WHEN id = \' . intval($profileID) . \' THEN \' . (intval($order) + 1);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$statement .= \' ELSE \' . 0 . \' END Where id IN(\' . implode(\',\', $datas_ID) . \')\';");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$db->setQuery($statement);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$response = $db->execute();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if ($response)");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("$query = $db->getQuery(true);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("$query->select(\'`id`, `ordering`\')->from(\'#__");
    String _name_2 = this.com.getName();
    String _lowerCase_2 = _name_2.toLowerCase();
    _builder.append(_lowerCase_2, "            ");
    _builder.append("_");
    EList<Entity> _entities_1 = this.indexpage.getEntities();
    Entity _get_1 = _entities_1.get(0);
    String _name_3 = _get_1.getName();
    String _lowerCase_3 = _name_3.toLowerCase();
    _builder.append(_lowerCase_3, "            ");
    _builder.append("\');");
    _builder.newLineIfNotEmpty();
    _builder.append("            ");
    _builder.append("$db->setQuery($query);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("return $db->loadObjectList();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return false;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminViewDisplay() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append("* loads model data into view context");
    _builder.newLine();
    _builder.append("*");
    _builder.newLine();
    _builder.append("* @param   string  $tpl  the name of the template to be used");
    _builder.newLine();
    _builder.append("*");
    _builder.newLine();
    _builder.append("* @return void");
    _builder.newLine();
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public function display($tpl = null) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$this->state = $this->get(\'State\');");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$this->items = $this->get(\'Items\');");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$this->pagination = $this->get(\'Pagination\');");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$this->filterForm    = $this->get(\'FilterForm\');");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("// Check for errors.");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if (count($errors = $this->get(\'Errors\'))) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("throw new Exception(implode(\"\\n\", $errors));");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    String _name = this.com.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "        ");
    _builder.append("Helper::addSubmenu(\'");
    String _name_1 = this.indexpage.getName();
    String _lowerCase = _name_1.toLowerCase();
    _builder.append(_lowerCase, "        ");
    _builder.append("\');");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$this->addToolbar();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$this->sidebar = JHtmlSidebar::render();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("parent::display($tpl);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminViewAddtoolbar() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append("* Add the page title and toolbar.");
    _builder.newLine();
    _builder.append("*");
    _builder.newLine();
    _builder.append("* @since\t1.6");
    _builder.newLine();
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append("*/");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("protected function addToolbar() {");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("require_once JPATH_COMPONENT . \'/helpers/");
    String _name = this.com.getName();
    String _lowerCase = _name.toLowerCase();
    _builder.append(_lowerCase, "       ");
    _builder.append(".php\';");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("       ");
    _builder.append("$state = $this->get(\'State\');");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("$canDo = ");
    String _name_1 = this.com.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper, "       ");
    _builder.append("Helper::getActions($state->get(\'filter.category_id\'));");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("       ");
    _builder.append("JToolBarHelper::title(JText::_(\'");
    String _name_2 = this.com.getName();
    String _nameExtensionBind = Slug.nameExtensionBind("com", _name_2);
    String _upperCase = _nameExtensionBind.toUpperCase();
    _builder.append(_upperCase, "       ");
    _builder.append("_TITLE_");
    String _name_3 = this.indexpage.getName();
    String _upperCase_1 = _name_3.toUpperCase();
    _builder.append(_upperCase_1, "       ");
    _builder.append("\'));");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("       ");
    _builder.append("//Check if the form exists before showing the add/edit buttons");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("$formPath = JPATH_COMPONENT_ADMINISTRATOR . \'/views/");
    String _name_4 = this.details.getName();
    String _lowerCase_1 = _name_4.toLowerCase();
    _builder.append(_lowerCase_1, "       ");
    _builder.append("\';");
    _builder.newLineIfNotEmpty();
    _builder.append("       ");
    _builder.append("if (file_exists($formPath)) {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("           ");
    _builder.append("if ($canDo->get(\'core.create\')) {");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("JToolBarHelper::addNew(\'");
    String _name_5 = this.details.getName();
    String _lowerCase_2 = _name_5.toLowerCase();
    _builder.append(_lowerCase_2, "               ");
    _builder.append(".add\', \'JTOOLBAR_NEW\');");
    _builder.newLineIfNotEmpty();
    _builder.append("           ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("           ");
    _builder.append("if ($canDo->get(\'core.edit\') && isset($this->items[0])) {");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("JToolBarHelper::editList(\'");
    String _name_6 = this.details.getName();
    String _lowerCase_3 = _name_6.toLowerCase();
    _builder.append(_lowerCase_3, "               ");
    _builder.append(".edit\', \'JTOOLBAR_EDIT\');");
    _builder.newLineIfNotEmpty();
    _builder.append("           ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("       ");
    _builder.append("if ($canDo->get(\'core.edit.state\')) {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("           ");
    _builder.append("if (isset($this->items[0]->state)) {");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("JToolBarHelper::divider();");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("JToolBarHelper::custom(\'");
    String _name_7 = this.indexpage.getName();
    String _lowerCase_4 = _name_7.toLowerCase();
    _builder.append(_lowerCase_4, "               ");
    _builder.append(".publish\', \'publish.png\', \'publish_f2.png\', \'JTOOLBAR_PUBLISH\', true);");
    _builder.newLineIfNotEmpty();
    _builder.append("               ");
    _builder.append("JToolBarHelper::custom(\'");
    String _name_8 = this.indexpage.getName();
    String _lowerCase_5 = _name_8.toLowerCase();
    _builder.append(_lowerCase_5, "               ");
    _builder.append(".unpublish\', \'unpublish.png\', \'unpublish_f2.png\', \'JTOOLBAR_UNPUBLISH\', true);");
    _builder.newLineIfNotEmpty();
    _builder.append("           ");
    _builder.append("} else if (isset($this->items[0])) {");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("//If this component does not use state then show a direct delete button as we can not trash");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("JToolBarHelper::deleteList(\'\', \'");
    String _name_9 = this.indexpage.getName();
    String _lowerCase_6 = _name_9.toLowerCase();
    _builder.append(_lowerCase_6, "               ");
    _builder.append(".delete\', \'JTOOLBAR_DELETE\');");
    _builder.newLineIfNotEmpty();
    _builder.append("           ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("           ");
    _builder.append("if (isset($this->items[0]->state)) {");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("JToolBarHelper::divider();");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("JToolBarHelper::archiveList(\'");
    String _name_10 = this.indexpage.getName();
    String _lowerCase_7 = _name_10.toLowerCase();
    _builder.append(_lowerCase_7, "               ");
    _builder.append(".archive\', \'JTOOLBAR_ARCHIVE\');");
    _builder.newLineIfNotEmpty();
    _builder.append("           ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("if (isset($this->items[0]->checked_out)) {");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("JToolBarHelper::custom(\'");
    String _name_11 = this.indexpage.getName();
    String _lowerCase_8 = _name_11.toLowerCase();
    _builder.append(_lowerCase_8, "               ");
    _builder.append(".checkin\', \'checkin.png\', \'checkin_f2.png\', \'JTOOLBAR_CHECKIN\', true);");
    _builder.newLineIfNotEmpty();
    _builder.append("           ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("//Show trash and delete for components that uses the state field");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("if (isset($this->items[0]->state)) {");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("if ($state->get(\'filter.state\') == -2 && $canDo->get(\'core.delete\')) {");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("JToolBarHelper::deleteList(\'\', \'");
    String _name_12 = this.indexpage.getName();
    String _lowerCase_9 = _name_12.toLowerCase();
    _builder.append(_lowerCase_9, "               ");
    _builder.append(".delete\', \'JTOOLBAR_EMPTY_TRASH\');");
    _builder.newLineIfNotEmpty();
    _builder.append("               ");
    _builder.append("JToolBarHelper::divider();");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("} else if ($canDo->get(\'core.edit.state\')) {");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("JToolBarHelper::trash(\'");
    String _name_13 = this.indexpage.getName();
    String _lowerCase_10 = _name_13.toLowerCase();
    _builder.append(_lowerCase_10, "               ");
    _builder.append(".trash\', \'JTOOLBAR_TRASH\');");
    _builder.newLineIfNotEmpty();
    _builder.append("               ");
    _builder.append("JToolBarHelper::divider();");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("       ");
    _builder.append("if ($canDo->get(\'core.admin\')) {");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("JToolBarHelper::preferences(\'");
    String _name_14 = this.com.getName();
    String _nameExtensionBind_1 = Slug.nameExtensionBind("com", _name_14);
    String _lowerCase_11 = _nameExtensionBind_1.toLowerCase();
    _builder.append(_lowerCase_11, "           ");
    _builder.append("\');");
    _builder.newLineIfNotEmpty();
    _builder.append("       ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("       ");
    _builder.append("JHtmlSidebar::setAction(\'index.php?option=");
    String _name_15 = this.com.getName();
    String _nameExtensionBind_2 = Slug.nameExtensionBind("com", _name_15);
    String _lowerCase_12 = _nameExtensionBind_2.toLowerCase();
    _builder.append(_lowerCase_12, "       ");
    _builder.append("&view=");
    String _name_16 = this.indexpage.getName();
    String _lowerCase_13 = _name_16.toLowerCase();
    _builder.append(_lowerCase_13, "       ");
    _builder.append("\');");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminViewSortFields() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("protected function getSortFields()");
    _builder.newLine();
    _builder.append("{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("return array(");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("\'a.id\' => JText::_(\'");
    String _name = this.com.getName();
    String _nameExtensionBind = Slug.nameExtensionBind("com", _name);
    String _upperCase = _nameExtensionBind.toUpperCase();
    _builder.append(_upperCase, "\t");
    _builder.append("_FORM_LBL_NONE_ID\'),");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("\'a.ordering\' => JText::_(\'");
    String _name_1 = this.com.getName();
    String _nameExtensionBind_1 = Slug.nameExtensionBind("com", _name_1);
    String _upperCase_1 = _nameExtensionBind_1.toUpperCase();
    _builder.append(_upperCase_1, "\t");
    _builder.append("_FORM_LBL_NONE_ORDERING\'),");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("\'a.state\' => JText::_(\'");
    String _name_2 = this.com.getName();
    String _nameExtensionBind_2 = Slug.nameExtensionBind("com", _name_2);
    String _upperCase_2 = _nameExtensionBind_2.toUpperCase();
    _builder.append(_upperCase_2, "\t");
    _builder.append("_FORM_LBL_NONE_STATE\')");
    _builder.newLineIfNotEmpty();
    {
      EList<ExtendedAttribute> _allAttributeOfFilterAndColum = this.indexpage.getAllAttributeOfFilterAndColum();
      for(final ExtendedAttribute attr : _allAttributeOfFilterAndColum) {
        _builder.append(", \'a.");
        String _name_3 = attr.getName();
        String _lowerCase = _name_3.toLowerCase();
        _builder.append(_lowerCase, "");
        _builder.append("\' => JText::_(\'");
        String _name_4 = this.com.getName();
        String _nameExtensionBind_3 = Slug.nameExtensionBind("com", _name_4);
        String _upperCase_3 = _nameExtensionBind_3.toUpperCase();
        _builder.append(_upperCase_3, "");
        _builder.append("_FORM_LBL_");
        Entity _entity = attr.getEntity();
        String _name_5 = _entity.getName();
        String _upperCase_4 = _name_5.toUpperCase();
        _builder.append(_upperCase_4, "");
        _builder.append("_");
        String _name_6 = attr.getName();
        String _upperCase_5 = _name_6.toUpperCase();
        _builder.append(_upperCase_5, "");
        _builder.append("\')");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append(");");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  private CharSequence genAdminViewLayoutFilters() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("  ");
    _builder.append("<?php");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("echo JLayoutHelper::render(\'joomla.searchtools.default\', array(\'view\' => $this));");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("?>");
    _builder.newLine();
    _builder.append("<div id=\"filter-bar\" class=\"btn-toolbar\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<div class=\"btn-group pull-right hidden-phone\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<label for=\"directionTable\" class=\"element-invisible\"><?php echo JText::_(\'JFIELD_ORDERING_DESC\');?></label>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<select name=\"directionTable\" id=\"directionTable\" class=\"input-medium\" onchange=\"Joomla.orderTable()\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<option value=\"\"><?php echo JText::_(\'JFIELD_ORDERING_DESC\');?></option>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<option value=\"asc\" <?php if ($listDirn == \'asc\') echo \'selected=\"selected\"\'; ?>><?php echo JText::_(\'JGLOBAL_ORDER_ASCENDING\');?></option>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<option value=\"desc\" <?php if ($listDirn == \'desc\') echo \'selected=\"selected\"\'; ?>><?php echo JText::_(\'JGLOBAL_ORDER_DESCENDING\');?></option>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</select>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<div class=\"btn-group pull-right\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<label for=\"sortTable\" class=\"element-invisible\"><?php echo JText::_(\'JGLOBAL_SORT_BY\');?></label>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<select name=\"sortTable\" id=\"sortTable\" class=\"input-medium\" onchange=\"Joomla.orderTable()\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<option value=\"\"><?php echo JText::_(\'JGLOBAL_SORT_BY\');?></option>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<?php echo JHtml::_(\'select.options\', $sortFields, \'value\', \'text\', $listOrder);?>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</select>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</div>        ");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
  
  private CharSequence genAdminViewLayoutData(final EList<ExtendedAttribute> column) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append(" ");
    _builder.append("<table class=\"table table-striped\" id=\"");
    String _name = this.indexpage.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, " ");
    _builder.append("List\">");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<?php if (isset($this->items[0]->ordering)): ?>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<th width=\"1%\" class=\"nowrap center hidden-phone\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<?php echo JHtml::_(\'grid.sort\', \'<i class=\"icon-menu-2\"></i>\', \'a.ordering\', $listDirn, $listOrder, null, \'asc\', \'JGRID_HEADING_ORDERING\'); ?>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<?php endif; ?>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<th width=\"1%\" class=\"hidden-phone\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<input type=\"checkbox\" name=\"checkall-toggle\" value=\"\" title=\"<?php echo JText::_(\'JGLOBAL_CHECK_ALL\'); ?>\" onclick=\"Joomla.checkAll(this)\" />");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<?php if (isset($this->items[0]->state)): ?>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<th width=\"1%\" class=\"nowrap center\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<?php echo JHtml::_(\'grid.sort\', \'JSTATUS\', \'a.state\', $listDirn, $listOrder); ?>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<?php endif; ?>");
    _builder.newLine();
    {
      for(final ExtendedAttribute attr : column) {
        _builder.append("<th class=\'left\'>");
        _builder.newLine();
        _builder.append("<?php echo JHtml::_(\'grid.sort\',  \'");
        String _name_1 = this.com.getName();
        String _nameExtensionBind = Slug.nameExtensionBind("com", _name_1);
        String _upperCase = _nameExtensionBind.toUpperCase();
        _builder.append(_upperCase, "");
        _builder.append("_FORM_LBL_");
        Entity _entity = attr.getEntity();
        String _name_2 = _entity.getName();
        String _upperCase_1 = _name_2.toUpperCase();
        _builder.append(_upperCase_1, "");
        _builder.append("_");
        String _name_3 = attr.getName();
        String _upperCase_2 = _name_3.toUpperCase();
        _builder.append(_upperCase_2, "");
        _builder.append("\', \'a.");
        String _name_4 = attr.getName();
        String _lowerCase = _name_4.toLowerCase();
        _builder.append(_lowerCase, "");
        _builder.append("\', $listDirn, $listOrder); ?>");
        _builder.newLineIfNotEmpty();
        _builder.append("</th>");
        _builder.newLine();
      }
    }
    _builder.append("     ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<?php if (isset($this->items[0]->id)): ?>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<th width=\"1%\" class=\"nowrap center hidden-phone\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<?php echo JHtml::_(\'grid.sort\', \'JGRID_HEADING_ID\', \'a.id\', $listDirn, $listOrder); ?>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</th>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<?php endif; ?>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("<tfoot>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<?php ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if(isset($this->items[0])){");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$colspan = count(get_object_vars($this->items[0]));");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("else{");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$colspan = 10;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("?>");
    _builder.newLine();
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<td colspan=\"<?php echo $colspan ?>\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<?php echo $this->pagination->getListFooter(); ?>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("</tfoot>");
    _builder.newLine();
    _builder.append("<tbody>");
    _builder.newLine();
    _builder.append("<?php foreach ($this->items as $i => $item) :");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$ordering   = ($listOrder == \'a.ordering\');");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$canCreate\t= $user->authorise(\'core.create\',\t\t\'");
    String _name_5 = this.com.getName();
    String _nameExtensionBind_1 = Slug.nameExtensionBind("com", _name_5);
    String _lowerCase_1 = _nameExtensionBind_1.toLowerCase();
    _builder.append(_lowerCase_1, "    ");
    _builder.append("\');");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$canEdit\t= $user->authorise(\'core.edit\',\t\t\t\'");
    String _name_6 = this.com.getName();
    String _nameExtensionBind_2 = Slug.nameExtensionBind("com", _name_6);
    String _lowerCase_2 = _nameExtensionBind_2.toLowerCase();
    _builder.append(_lowerCase_2, "    ");
    _builder.append("\');");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$canCheckin\t= $user->authorise(\'core.manage\',\t\t\'");
    String _name_7 = this.com.getName();
    String _nameExtensionBind_3 = Slug.nameExtensionBind("com", _name_7);
    String _lowerCase_3 = _nameExtensionBind_3.toLowerCase();
    _builder.append(_lowerCase_3, "    ");
    _builder.append("\');");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$canChange\t= $user->authorise(\'core.edit.state\',\t\'");
    String _name_8 = this.com.getName();
    String _nameExtensionBind_4 = Slug.nameExtensionBind("com", _name_8);
    String _lowerCase_4 = _nameExtensionBind_4.toLowerCase();
    _builder.append(_lowerCase_4, "    ");
    _builder.append("\');");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("?>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<tr class=\"row<?php echo $i % 2; ?>\">");
    _builder.newLine();
    _builder.append("        ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<?php if (isset($this->items[0]->ordering)): ?>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<td class=\"order nowrap center hidden-phone\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<?php if ($canChange) :");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("$disableClassName = \'\';");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("$disabledLabel\t  = \'\';");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if (!$saveOrder) :");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("$disabledLabel    = JText::_(\'JORDERINGDISABLED\');");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("$disableClassName = \'inactive tip-top\';");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("endif; ?>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<span class=\"sortable-handler hasTooltip <?php echo $disableClassName?>\" title=\"<?php echo $disabledLabel?>\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<i class=\"icon-menu\"></i>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</span>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<input type=\"text\" style=\"display:none\" name=\"order[]\" size=\"5\" value=\"<?php echo $item->ordering;?>\" class=\"width-20 text-area-order \" />");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<?php else : ?>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<span class=\"sortable-handler inactive\" >");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<i class=\"icon-menu\"></i>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</span>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<?php endif; ?>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<?php endif; ?>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<td class=\"center hidden-phone\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<?php echo JHtml::_(\'grid.id\', $i, $item->id); ?>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<?php if (isset($this->items[0]->state)): ?>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<td class=\"center\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<?php echo JHtml::_(\'jgrid.published\', $item->state, $i, \'");
    String _name_9 = this.indexpage.getName();
    String _lowerCase_5 = _name_9.toLowerCase();
    _builder.append(_lowerCase_5, "\t\t\t");
    _builder.append(".\', $canChange, \'cb\'); ?>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<?php endif; ?>");
    _builder.newLine();
    _builder.append("\t\t");
    CharSequence _genAdminModelAttributeReference = this.genAdminModelAttributeReference(column, this.indexpage, this.com);
    _builder.append(_genAdminModelAttributeReference, "\t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("<?php if (isset($this->items[0]->id)): ?>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<td class=\"center hidden-phone\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<?php echo (int) $item->id; ?>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<?php endif; ?>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<?php endforeach; ?>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("</table>");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminViewLayoutForm() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<form action=\"<?php echo JRoute::_(\'index.php?option=");
    String _name = this.com.getName();
    String _nameExtensionBind = Slug.nameExtensionBind("com", _name);
    String _lowerCase = _nameExtensionBind.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append("&view=");
    String _name_1 = this.indexpage.getName();
    String _lowerCase_1 = _name_1.toLowerCase();
    _builder.append(_lowerCase_1, "");
    _builder.append("\'); ?>\" method=\"post\" name=\"adminForm\" id=\"adminForm\">");
    _builder.newLineIfNotEmpty();
    _builder.append("<?php if(!empty($this->sidebar)): ?>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div id=\"j-sidebar-container\" class=\"span2\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<?php echo $this->sidebar; ?>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div id=\"j-main-container\" class=\"span10\">");
    _builder.newLine();
    _builder.append("<?php else : ?>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div id=\"j-main-container\">");
    _builder.newLine();
    _builder.append("<?php endif;?>");
    _builder.newLine();
    CharSequence _genAdminViewLayoutFilters = this.genAdminViewLayoutFilters();
    _builder.append(_genAdminViewLayoutFilters, "");
    _builder.newLineIfNotEmpty();
    EList<ExtendedAttribute> _extendedTableColumnList = this.indexpage.getExtendedTableColumnList();
    CharSequence _genAdminViewLayoutData = this.genAdminViewLayoutData(_extendedTableColumnList);
    _builder.append(_genAdminViewLayoutData, "");
    _builder.newLineIfNotEmpty();
    _builder.append("<input type=\"hidden\" name=\"task\" value=\"\" />");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<input type=\"hidden\" name=\"boxchecked\" value=\"0\" />");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<input type=\"hidden\" name=\"filter_order\" value=\"<?php echo $listOrder; ?>\" />");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<input type=\"hidden\" name=\"filter_order_Dir\" value=\"<?php echo $listDirn; ?>\" />");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<?php echo JHtml::_(\'form.token\'); ?>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("</form>  ");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminViewLayoutHeader() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("$user\t= JFactory::getUser();");
    _builder.newLine();
    _builder.append("$userId\t= $user->get(\'id\');");
    _builder.newLine();
    _builder.append("$listOrder\t= $this->state->get(\'list.ordering\');");
    _builder.newLine();
    _builder.append("$listDirn\t= $this->state->get(\'list.direction\');");
    _builder.newLine();
    _builder.append("$canOrder\t= $user->authorise(\'core.edit.state\', \'");
    String _name = this.com.getName();
    String _nameExtensionBind = Slug.nameExtensionBind("com", _name);
    String _lowerCase = _nameExtensionBind.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append("\');");
    _builder.newLineIfNotEmpty();
    _builder.append("$saveOrder\t= $listOrder == \'a.ordering\';");
    _builder.newLine();
    _builder.append("if ($saveOrder)");
    _builder.newLine();
    _builder.append("{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$saveOrderingUrl = \'index.php?option=");
    String _name_1 = this.com.getName();
    String _nameExtensionBind_1 = Slug.nameExtensionBind("com", _name_1);
    String _lowerCase_1 = _nameExtensionBind_1.toLowerCase();
    _builder.append(_lowerCase_1, "\t");
    _builder.append("&task=");
    String _name_2 = this.indexpage.getName();
    String _lowerCase_2 = _name_2.toLowerCase();
    _builder.append(_lowerCase_2, "\t");
    _builder.append(".saveOrderAjax&tmpl=component\';");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("JHtml::_(\'sortablelist.sortable\', \'");
    String _name_3 = this.indexpage.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name_3);
    _builder.append(_firstUpper, "\t");
    _builder.append("List\', \'adminForm\', strtolower($listDirn), $saveOrderingUrl);");
    _builder.newLineIfNotEmpty();
    _builder.append("}");
    _builder.newLine();
    _builder.append("$sortFields = $this->getSortFields();");
    _builder.newLine();
    _builder.append("?>");
    _builder.newLine();
    _builder.append("<script type=\"text/javascript\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Joomla.orderTable = function() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("table = document.getElementById(\"sortTable\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("direction = document.getElementById(\"directionTable\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("order = table.options[table.selectedIndex].value;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (order != \'<?php echo $listOrder; ?>\') {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("dirn = \'asc\';");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("dirn = direction.options[direction.selectedIndex].value;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Joomla.tableOrdering(order, dirn, \'\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("</script>");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminModelPopulateState() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("* Method to auto-populate the model state.");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("*");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("* Note. Calling getState in this method will result in recursion.");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("protected function populateState($ordering = null, $direction = null) {");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("// Initialise variables.");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("$app = JFactory::getApplication(\'administrator\');");
    _builder.newLine();
    _builder.newLine();
    _builder.append("      ");
    _builder.append("// Load the filter state.");
    _builder.newLine();
    _builder.append("       ");
    _builder.append("$published = $app->getUserStateFromRequest($this->context . \'.filter.state\', \'filter_published\');");
    _builder.newLine();
    _builder.append("      \t      ");
    _builder.append("$this->setState(\'filter.published\', $published);");
    _builder.newLine();
    _builder.append("      ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("$state = $app->getUserStateFromRequest($this->context . \'.filter.state\', \'filter_state\');");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("$this->setState(\'filter.state\', $state);");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("$created_by = $app->getUserStateFromRequest($this->context . \'.filter.created_by\', \'filter_created_by\');");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("$this->setState(\'filter.created_by\', $created_by);");
    _builder.newLine();
    {
      EList<ExtendedAttribute> _extendFiltersList = this.indexpage.getExtendFiltersList();
      for(final ExtendedAttribute attr : _extendFiltersList) {
        _builder.append("       ");
        _builder.append("$");
        String _name = attr.getName();
        _builder.append(_name, "       ");
        _builder.append(" = $app->getUserStateFromRequest($this->context . \'.filter.");
        String _name_1 = attr.getName();
        _builder.append(_name_1, "       ");
        _builder.append("\', \'filter_");
        String _name_2 = attr.getName();
        _builder.append(_name_2, "       ");
        _builder.append("\');");
        _builder.newLineIfNotEmpty();
        _builder.append("       ");
        _builder.append("             ");
        _builder.append("$this->setState(\'filter.");
        String _name_3 = attr.getName();
        _builder.append(_name_3, "                    ");
        _builder.append("\', $");
        String _name_4 = attr.getName();
        _builder.append(_name_4, "                    ");
        _builder.append(");");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("      ");
    _builder.append("// Load the parameters.");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("$params = JComponentHelper::getParams(\'");
    String _name_5 = this.com.getName();
    String _lowerCase = _name_5.toLowerCase();
    String _nameExtensionBind = Slug.nameExtensionBind("com", _lowerCase);
    _builder.append(_nameExtensionBind, "      ");
    _builder.append("\');");
    _builder.newLineIfNotEmpty();
    _builder.append("      ");
    _builder.append("$this->setState(\'params\', $params);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("      ");
    _builder.append("// List state information.");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("parent::populateState(\'a.id\', \'asc\');");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genGetIdOfReferenceItem() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("* Method to get the id of Reference");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("* @param String  $linkName   containt the name of a Attribute");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("* @param String  $attrvaluen  containt the value of a Row");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("*");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("* @return the ID of a Row");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("*");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("public function getIdOfReferenceItem($linkName, $attrvalue){");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$dbtable = $this->entitiesRef[\"$linkName\"][\"db\"];");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$attribute = $this->entitiesRef[\"$linkName\"][\"refattr\"];");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$db = JFactory::getDbo();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$query = $db->getQuery(true);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$query->select(\"id\")");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("->from($dbtable);");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("foreach ($attribute as $index=>$attributItem){ ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$query->where($attributItem . \" like \'$attrvalue[$index]\'\");");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$db->setQuery($query);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$result = $db->loadObject();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("return intval($result->id);");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence genAdminModelAttributeReference(final EList<ExtendedAttribute> column, final ExtendedDynamicPage indexpage, final ExtendedComponent com) {
    StringConcatenation _builder = new StringConcatenation();
    {
      for(final ExtendedAttribute attr : column) {
        {
          Boolean _isAttributeLinked = Slug.isAttributeLinked(attr, indexpage);
          if ((_isAttributeLinked).booleanValue()) {
            _builder.append("<?php if ($canEdit) : ?>");
            _builder.newLine();
            _builder.append("<td>");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("<a href=\"<?php echo JRoute::_(");
            String _name = com.getName();
            CharSequence _linkOfAttribut = Slug.linkOfAttribut(attr, indexpage, _name, "$item->");
            _builder.append(_linkOfAttribut, "\t");
            _builder.append("); ?>\">");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("<?php echo $this->escape($item->");
            String _name_1 = attr.getName();
            String _lowerCase = _name_1.toLowerCase();
            _builder.append(_lowerCase, "\t\t");
            _builder.append("); ?></a>");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("<?php else : ?>");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("<?php echo $this->escape($item->");
            String _name_2 = attr.getName();
            String _lowerCase_1 = _name_2.toLowerCase();
            _builder.append(_lowerCase_1, "\t\t");
            _builder.append("); ?>");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("<?php endif; ?>");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("</td>");
            _builder.newLine();
          } else {
            _builder.append("<td>");
            _builder.newLine();
            _builder.append("<?php echo $item->");
            String _name_3 = attr.getName();
            String _lowerCase_2 = _name_3.toLowerCase();
            _builder.append(_lowerCase_2, "");
            _builder.append("; ?>");
            _builder.newLineIfNotEmpty();
            _builder.append("</td>");
            _builder.newLine();
          }
        }
      }
    }
    return _builder;
  }
}
