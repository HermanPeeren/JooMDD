dependencies {
	compile project(':de.thm.icampus.joomdd.ejsl')
	compile "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
}

apply plugin: 'application'
mainClassName = "org.eclipse.xtext.ide.server.ServerLauncher"

//this is an eclipse plugin project
eclipseClasspath.enabled=false
cleanEclipseClasspath.enabled=false


task updatePomVersion{
	description 'Update the Version for the Project'
	group ('JooMDD_Help_Task')
	
	doLast{	
		def xmlFile = file ('pom.xml')
		def xmlText = xmlFile.getText()	
		def parser = new XmlParser()
		def list = parser.parseText(xmlText)
		
		
		list.parent[0].version[0].replaceNode{		
				version(version){}	
		}

		def writer = new FileWriter(xmlFile)

		def printer = new XmlNodePrinter(new PrintWriter(writer))
		printer.preserveWhitespace = true
		printer.print(list)
	}
}


task updateManifestVersion(type: Copy){
	description 'Update the Version for the Project'
	group ('JooMDD_Help_Task')
	
	def number = '[0|1|2|3|4|5|6|7|8|9]*' 
	
	from('./META-INF2/MANIFEST.MF'){		
		filter{String line -> line.replaceAll('Bundle-Version: '+number+'.'+number+'.'+number , 'Bundle-Version: '+ version)} 
	}	
	into('./META-INF/')
}

task deleteOriginManifest(type: Delete){
	description 'delete the Original Manifest file'
	group ('JooMDD_Help_Task')
	
	delete('./META-INF/')
}


task deleteBackupManifest(type: Delete){
	description 'delete the Version for the Project'
	group ('JooMDD_Help_Task')
	
	delete('./META-INF2/')
}

task copyBackupManifest(type: Copy){
	description 'Update the Version for the Project'
	group ('JooMDD_Help_Task')
	
	from('./META-INF/MANIFEST.MF')	
	
	into('./META-INF2/')
}

task updateVersion(dependsOn : [ 'copyBackupManifest', 'deleteOriginManifest','updateManifestVersion', 'deleteBackupManifest', 'updatePomVersion' ]){
	description 'Update the Version for the Project ejsl'
	group ('JooMDD_Help_Task')

	deleteBackupManifest.mustRunAfter		updateManifestVersion
	updateManifestVersion.mustRunAfter		deleteOriginManifest
	deleteOriginManifest.mustRunAfter		copyBackupManifest
}


task deleteXtendGen (type: Delete){
	description 'delete Xtend-Gen Folder for the Project'
	group ('JooMDD_Help_Task')
	
	delete('./xtend-gen/')
}

ant.importBuild 'CreateGenFolders.xml'

task runAntScript(dependsOn: make){
	description 'runs Ant Skript'
	group ('JooMDD_Help_Task')
}

task regenerateXtendGenFolder(dependsOn:['deleteXtendGen','runAntScript']){
	description 'delete and create xtend gen'
	group ('JooMDD')

	runAntScript.mustRunAfter	deleteXtendGen
}