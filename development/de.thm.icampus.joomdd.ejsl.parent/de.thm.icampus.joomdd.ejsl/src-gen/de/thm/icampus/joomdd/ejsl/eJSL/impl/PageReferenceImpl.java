/**
 * generated by iCampus (JooMDD team) 2.9.1
 */
package de.thm.icampus.joomdd.ejsl.eJSL.impl;

import de.thm.icampus.joomdd.ejsl.eJSL.Component;
import de.thm.icampus.joomdd.ejsl.eJSL.EJSLPackage;
import de.thm.icampus.joomdd.ejsl.eJSL.Page;
import de.thm.icampus.joomdd.ejsl.eJSL.PageReference;
import de.thm.icampus.joomdd.ejsl.eJSL.SectionKinds;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Page Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.PageReferenceImpl#getPage <em>Page</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.PageReferenceImpl#getPagescr <em>Pagescr</em>}</li>
 *   <li>{@link de.thm.icampus.joomdd.ejsl.eJSL.impl.PageReferenceImpl#getSect <em>Sect</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PageReferenceImpl extends MinimalEObjectImpl.Container implements PageReference
{
  /**
   * The cached value of the '{@link #getPage() <em>Page</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPage()
   * @generated
   * @ordered
   */
  protected Page page;

  /**
   * The cached value of the '{@link #getPagescr() <em>Pagescr</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPagescr()
   * @generated
   * @ordered
   */
  protected Component pagescr;

  /**
   * The default value of the '{@link #getSect() <em>Sect</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSect()
   * @generated
   * @ordered
   */
  protected static final SectionKinds SECT_EDEFAULT = SectionKinds.BACKEND;

  /**
   * The cached value of the '{@link #getSect() <em>Sect</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSect()
   * @generated
   * @ordered
   */
  protected SectionKinds sect = SECT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PageReferenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EJSLPackage.Literals.PAGE_REFERENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Page getPage()
  {
    if (page != null && page.eIsProxy())
    {
      InternalEObject oldPage = (InternalEObject)page;
      page = (Page)eResolveProxy(oldPage);
      if (page != oldPage)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, EJSLPackage.PAGE_REFERENCE__PAGE, oldPage, page));
      }
    }
    return page;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Page basicGetPage()
  {
    return page;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPage(Page newPage)
  {
    Page oldPage = page;
    page = newPage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EJSLPackage.PAGE_REFERENCE__PAGE, oldPage, page));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Component getPagescr()
  {
    if (pagescr != null && pagescr.eIsProxy())
    {
      InternalEObject oldPagescr = (InternalEObject)pagescr;
      pagescr = (Component)eResolveProxy(oldPagescr);
      if (pagescr != oldPagescr)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, EJSLPackage.PAGE_REFERENCE__PAGESCR, oldPagescr, pagescr));
      }
    }
    return pagescr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Component basicGetPagescr()
  {
    return pagescr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPagescr(Component newPagescr)
  {
    Component oldPagescr = pagescr;
    pagescr = newPagescr;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EJSLPackage.PAGE_REFERENCE__PAGESCR, oldPagescr, pagescr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SectionKinds getSect()
  {
    return sect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSect(SectionKinds newSect)
  {
    SectionKinds oldSect = sect;
    sect = newSect == null ? SECT_EDEFAULT : newSect;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EJSLPackage.PAGE_REFERENCE__SECT, oldSect, sect));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EJSLPackage.PAGE_REFERENCE__PAGE:
        if (resolve) return getPage();
        return basicGetPage();
      case EJSLPackage.PAGE_REFERENCE__PAGESCR:
        if (resolve) return getPagescr();
        return basicGetPagescr();
      case EJSLPackage.PAGE_REFERENCE__SECT:
        return getSect();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EJSLPackage.PAGE_REFERENCE__PAGE:
        setPage((Page)newValue);
        return;
      case EJSLPackage.PAGE_REFERENCE__PAGESCR:
        setPagescr((Component)newValue);
        return;
      case EJSLPackage.PAGE_REFERENCE__SECT:
        setSect((SectionKinds)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.PAGE_REFERENCE__PAGE:
        setPage((Page)null);
        return;
      case EJSLPackage.PAGE_REFERENCE__PAGESCR:
        setPagescr((Component)null);
        return;
      case EJSLPackage.PAGE_REFERENCE__SECT:
        setSect(SECT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EJSLPackage.PAGE_REFERENCE__PAGE:
        return page != null;
      case EJSLPackage.PAGE_REFERENCE__PAGESCR:
        return pagescr != null;
      case EJSLPackage.PAGE_REFERENCE__SECT:
        return sect != SECT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (sect: ");
    result.append(sect);
    result.append(')');
    return result.toString();
  }

} //PageReferenceImpl
