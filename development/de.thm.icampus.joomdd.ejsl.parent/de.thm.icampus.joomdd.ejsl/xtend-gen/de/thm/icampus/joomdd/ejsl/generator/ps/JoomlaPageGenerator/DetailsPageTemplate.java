package de.thm.icampus.joomdd.ejsl.generator.ps.JoomlaPageGenerator;

import de.thm.icampus.joomdd.ejsl.eJSL.IndexPage;
import de.thm.icampus.joomdd.ejsl.generator.pi.ExtendedEntity.ExtendedEntity;
import de.thm.icampus.joomdd.ejsl.generator.pi.ExtendedExtension.ExtendedComponent;
import de.thm.icampus.joomdd.ejsl.generator.pi.ExtendedPage.ExtendedDynamicPage;
import de.thm.icampus.joomdd.ejsl.generator.ps.JoomlaPageGenerator.DetailsPageTemplateBackendHelper;
import de.thm.icampus.joomdd.ejsl.generator.ps.JoomlaPageGenerator.DetailsPageTemplateFrontEndHelper;
import de.thm.icampus.joomdd.ejsl.generator.ps.JoomlaPageGenerator.DynamicPageTemplate;
import de.thm.icampus.joomdd.ejsl.generator.ps.JoomlaUtil.Slug;
import org.eclipse.emf.common.util.EList;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.xbase.lib.StringExtensions;

@SuppressWarnings("all")
public class DetailsPageTemplate extends DynamicPageTemplate {
  private ExtendedDynamicPage dpage;
  
  private ExtendedComponent com;
  
  private String sec;
  
  private DetailsPageTemplateBackendHelper backHelp;
  
  private DetailsPageTemplateFrontEndHelper frontHelp;
  
  private String path;
  
  private String pagename;
  
  public DetailsPageTemplate(final ExtendedDynamicPage dp, final ExtendedComponent cp, final String section, final String path, final IFileSystemAccess fsa) {
    this.dpage = dp;
    this.com = cp;
    this.sec = section;
    DetailsPageTemplateBackendHelper _detailsPageTemplateBackendHelper = new DetailsPageTemplateBackendHelper(this.dpage, this.com, this.sec);
    this.backHelp = _detailsPageTemplateBackendHelper;
    DetailsPageTemplateFrontEndHelper _detailsPageTemplateFrontEndHelper = new DetailsPageTemplateFrontEndHelper(this.dpage, this.com, this.sec);
    this.frontHelp = _detailsPageTemplateFrontEndHelper;
    this.path = path;
    String _name = this.dpage.getName();
    String _lowerCase = _name.toLowerCase();
    this.pagename = _lowerCase;
    this.setFsa(fsa);
  }
  
  public void generateView() {
    boolean _equalsIgnoreCase = this.sec.equalsIgnoreCase("admin");
    if (_equalsIgnoreCase) {
      this.generateJoomlaDirectory(((this.path + "/") + this.pagename));
      CharSequence _generateAdminViewClass = this.generateAdminViewClass();
      this.generateFile(((((this.path + "/") + this.pagename) + "/") + "view.html.php"), _generateAdminViewClass);
      this.generateJoomlaDirectory(((((this.path + "/") + this.pagename) + "/") + "tmpl"));
      CharSequence _generateAdminViewLayout = this.generateAdminViewLayout();
      this.generateFile(((((((this.path + "/") + this.pagename) + "/") + "tmpl") + "/") + "edit.php"), _generateAdminViewLayout);
    } else {
      this.generateJoomlaDirectory((((this.path + "/") + this.pagename) + "edit"));
      CharSequence _generateSiteView = this.generateSiteView(Boolean.valueOf(true));
      this.generateFile((((((this.path + "/") + this.pagename) + "edit") + "/") + "view.html.php"), _generateSiteView);
      this.generateJoomlaDirectory((((((this.path + "/") + this.pagename) + "edit") + "/") + "tmpl"));
      CharSequence _generateSiteViewLayoutEdit = this.generateSiteViewLayoutEdit();
      this.generateFile((((((((this.path + "/") + this.pagename) + "edit") + "/") + "tmpl") + "/") + "default.php"), _generateSiteViewLayoutEdit);
      CharSequence _xmlSiteTemplateContent = this.xmlSiteTemplateContent((this.pagename + "edit"), this.dpage, this.com);
      this.generateFile((((((((this.path + "/") + this.pagename) + "edit") + "/") + "tmpl") + "/") + "default.xml"), _xmlSiteTemplateContent);
      this.generateJoomlaDirectory(((this.path + "/") + this.pagename));
      CharSequence _generateSiteView_1 = this.generateSiteView(Boolean.valueOf(false));
      this.generateFile(((((this.path + "/") + this.pagename) + "/") + "view.html.php"), _generateSiteView_1);
      this.generateJoomlaDirectory(((((this.path + "/") + this.pagename) + "/") + "tmpl"));
      CharSequence _generateSiteViewLayoutShow = this.generateSiteViewLayoutShow();
      this.generateFile(((((((this.path + "/") + this.pagename) + "/") + "tmpl") + "/") + "default.php"), _generateSiteViewLayoutShow);
      CharSequence _xmlSiteTemplateContent_1 = this.xmlSiteTemplateContent(this.pagename, this.dpage, this.com);
      this.generateFile(((((((this.path + "/") + this.pagename) + "/") + "tmpl") + "/") + "default.xml"), _xmlSiteTemplateContent_1);
    }
  }
  
  public void generateController() {
    boolean _equalsIgnoreCase = this.sec.equalsIgnoreCase("admin");
    if (_equalsIgnoreCase) {
      CharSequence _generateAdminController = this.generateAdminController();
      this.generateFile((((this.path + "/") + this.pagename) + ".php"), _generateAdminController);
    } else {
      CharSequence _generateSiteController = this.generateSiteController(Boolean.valueOf(true));
      this.generateFile(((((this.path + "/") + this.pagename) + "edit") + ".php"), _generateSiteController);
      CharSequence _generateSiteController_1 = this.generateSiteController(Boolean.valueOf(false));
      this.generateFile((((this.path + "/") + this.pagename) + ".php"), _generateSiteController_1);
    }
  }
  
  public void generateModel() {
    boolean _equalsIgnoreCase = this.sec.equalsIgnoreCase("admin");
    if (_equalsIgnoreCase) {
      CharSequence _generateAdminModel = this.generateAdminModel();
      this.generateFile((((this.path + "/") + this.pagename) + ".php"), _generateAdminModel);
      EList<ExtendedEntity> _extendedEntityList = this.dpage.getExtendedEntityList();
      ExtendedEntity _get = _extendedEntityList.get(0);
      String _name = _get.getName();
      String _lowerCase = _name.toLowerCase();
      String _plus = (((this.path + "/forms") + "/") + _lowerCase);
      String _plus_1 = (_plus + ".xml");
      String _name_1 = this.com.getName();
      CharSequence _xmlAdminFields = this.xmlAdminFields(this.dpage, this.com, _name_1);
      this.generateFile(_plus_1, _xmlAdminFields);
    } else {
      CharSequence _generateSiteModelEdit = this.generateSiteModelEdit();
      this.generateFile(((((this.path + "/") + this.pagename) + "edit") + ".php"), _generateSiteModelEdit);
      CharSequence _generateSiteModelShow = this.generateSiteModelShow();
      this.generateFile((((this.path + "/") + this.pagename) + ".php"), _generateSiteModelShow);
      EList<ExtendedEntity> _extendedEntityList_1 = this.dpage.getExtendedEntityList();
      ExtendedEntity _get_1 = _extendedEntityList_1.get(0);
      String _name_2 = _get_1.getName();
      String _lowerCase_1 = _name_2.toLowerCase();
      String _plus_2 = (((this.path + "/forms") + "/") + _lowerCase_1);
      String _plus_3 = (_plus_2 + ".xml");
      String _name_3 = this.com.getName();
      CharSequence _xmlAdminFields_1 = this.xmlAdminFields(this.dpage, this.com, _name_3);
      this.generateFile(_plus_3, _xmlAdminFields_1);
    }
  }
  
  public CharSequence generateAdminController() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\t   ");
    CharSequence _generateFileDoc = this.generateFileDoc(this.dpage, this.com, true);
    _builder.append(_generateFileDoc, "\t   ");
    _builder.newLineIfNotEmpty();
    _builder.append("jimport(\'joomla.application.component.controllerform\');");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* ");
    String _name = this.dpage.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, " ");
    _builder.append(" controller class.");
    _builder.newLineIfNotEmpty();
    _builder.append(" ");
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("class ");
    String _name_1 = this.com.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "");
    _builder.append("Controller");
    String _name_2 = this.dpage.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_2, "");
    _builder.append(" extends JControllerForm");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("function __construct() {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$this->view_list = \'");
    IndexPage _pageForAll = Slug.getPageForAll(this.dpage, this.com);
    String _name_3 = _pageForAll.getName();
    String _lowerCase = _name_3.toLowerCase();
    _builder.append(_lowerCase, "        ");
    _builder.append("\';");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("parent::__construct();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateModelLoadFormDataFunction() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Method to get the data that should be injected in the form.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @return\tmixed\tThe data for the form.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @since\t1.6");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("protected function loadFormData()");
    _builder.newLine();
    _builder.append("{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Check the session for previously entered form data.");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$data = JFactory::getApplication()->getUserState(\'");
    String _name = this.com.getName();
    String _lowerCase = _name.toLowerCase();
    String _nameExtensionBind = Slug.nameExtensionBind("com", _lowerCase);
    _builder.append(_nameExtensionBind, "\t");
    _builder.append(".edit.");
    EList<ExtendedEntity> _extendedEntityList = this.dpage.getExtendedEntityList();
    ExtendedEntity _get = _extendedEntityList.get(0);
    String _name_1 = _get.getName();
    String _lowerCase_1 = _name_1.toLowerCase();
    _builder.append(_lowerCase_1, "\t");
    _builder.append(".data\', array());");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("if (empty($data)) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("$data = $this->getItem();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("return $data;");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateModelGetItemFunction() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Method to get a single record.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @param\tinteger\tThe id of the primary key.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @return\tmixed\tObject on success, false on failure.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @since\t1.6");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("public function getItem($pk = null)");
    _builder.newLine();
    _builder.append("{");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("$pk = (!empty($pk)) ? $pk : (int) $this->getState(\'");
    String _name = this.dpage.getName();
    String _lowerCase = _name.toLowerCase();
    _builder.append(_lowerCase, "\t    ");
    _builder.append(".id\');");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("$table = $this->getTable();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if ($pk > 0)");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("try{");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("// Attempt to load the row.");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("$return = $table->load($pk);");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("}catch (Exception $e){");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("// Check for a table object error.");
    _builder.newLine();
    _builder.append("               ");
    _builder.append("throw new Exception(\'Database Failur:  no element Found\'. $e . $return);");
    _builder.newLine();
    _builder.append("           ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("       ");
    _builder.append("// Convert to the JObject before adding other data.");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$properties = $table->getProperties(1);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$item =  ArrayHelper::toObject($properties);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if (property_exists($item, \'params\'))");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("$registry = new Registry;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("$registry->loadString($item->params);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("$item->params = $registry->toArray();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("return $item;");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateModelGetFormFunction() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Method to get the record form.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @param\tarray\t$data\t\tAn optional array of data for the form to interogate.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @param\tboolean\t$loadData\tTrue if the form is to load its own data (default case), false if not.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @return\tJForm\tA JForm object on success, false on failure");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @since\t1.6");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @generated");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("public function getForm($data = array(), $loadData = true)");
    _builder.newLine();
    _builder.append("{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Initialise variables.");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$app\t= JFactory::getApplication();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Get the form.");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$form = $this->loadForm(\'");
    String _name = this.com.getName();
    String _lowerCase = _name.toLowerCase();
    String _nameExtensionBind = Slug.nameExtensionBind("com", _lowerCase);
    _builder.append(_nameExtensionBind, "\t");
    _builder.append(".");
    String _name_1 = this.dpage.getName();
    String _lowerCase_1 = _name_1.toLowerCase();
    _builder.append(_lowerCase_1, "\t");
    _builder.append("\', \'");
    EList<ExtendedEntity> _extendedEntityList = this.dpage.getExtendedEntityList();
    ExtendedEntity _get = _extendedEntityList.get(0);
    String _name_2 = _get.getName();
    String _lowerCase_2 = _name_2.toLowerCase();
    _builder.append(_lowerCase_2, "\t");
    _builder.append("\', array(\'control\' => \'jform\', \'load_data\' => $loadData));");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("if (empty($form)) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return false;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("return $form;");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateAdminModel() {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateFileDoc = this.generateFileDoc(this.dpage, this.com, true);
    _builder.append(_generateFileDoc, "");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("jimport(\'joomla.application.component.modeladmin\');");
    _builder.newLine();
    _builder.append("use Joomla\\Utilities\\ArrayHelper;");
    _builder.newLine();
    _builder.append("use Joomla\\Registry\\Registry;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* The Model To schow the Details of a ");
    String _name = this.dpage.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, " ");
    _builder.append("  ");
    _builder.newLineIfNotEmpty();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("class ");
    String _name_1 = this.com.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "");
    _builder.append("Model");
    String _name_2 = this.dpage.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_2, "");
    _builder.append(" extends JModelAdmin");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @var\t\tstring\tThe prefix to use with controller messages.");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* @since\t1.6");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected $text_prefix = \'");
    String _upperCase = "com".toUpperCase();
    String _name_3 = this.com.getName();
    String _upperCase_1 = _name_3.toUpperCase();
    String _nameExtensionBind = Slug.nameExtensionBind(_upperCase, _upperCase_1);
    _builder.append(_nameExtensionBind, "\t");
    _builder.append("\';");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateAdminModelTableFunction = this.backHelp.generateAdminModelTableFunction();
    _builder.append(_generateAdminModelTableFunction, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateModelGetFormFunction = this.generateModelGetFormFunction();
    _builder.append(_generateModelGetFormFunction, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateModelLoadFormDataFunction = this.generateModelLoadFormDataFunction();
    _builder.append(_generateModelLoadFormDataFunction, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateModelGetItemFunction = this.generateModelGetItemFunction();
    _builder.append(_generateModelGetItemFunction, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateAdminModelprepareTableFunction = this.backHelp.generateAdminModelprepareTableFunction();
    _builder.append(_generateAdminModelprepareTableFunction, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateAdminViewClass() {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateFileDoc = this.generateFileDoc(this.dpage, this.com, true);
    _builder.append(_generateFileDoc, "");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("jimport(\'joomla.application.component.view\');");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* View to edit a ");
    String _name = this.dpage.getName();
    _builder.append(_name, "\t ");
    _builder.newLineIfNotEmpty();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("class ");
    String _name_1 = this.com.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper, "\t");
    _builder.append("View");
    String _name_2 = this.dpage.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_1, "\t");
    _builder.append(" extends JViewLegacy {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("protected $state;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("protected $item;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("protected $form;");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.newLine();
    _builder.append("\t    ");
    CharSequence _generateAdminViewDisplay = this.backHelp.generateAdminViewDisplay();
    _builder.append(_generateAdminViewDisplay, "\t    ");
    _builder.newLineIfNotEmpty();
    _builder.append("\t    ");
    CharSequence _generateAdminViewAddToolbar = this.backHelp.generateAdminViewAddToolbar();
    _builder.append(_generateAdminViewAddToolbar, "\t    ");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("}\t\t");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateAdminViewLayout() {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateFileDoc = this.generateFileDoc(this.dpage, this.com, false);
    _builder.append(_generateFileDoc, "");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("JHtml::addIncludePath(JPATH_COMPONENT . \'/helpers/html\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("JHtml::_(\'behavior.tooltip\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("JHtml::_(\'behavior.formvalidation\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("JHtml::_(\'formbehavior.chosen\', \'select\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("JHtml::_(\'behavior.keepalive\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Import CSS");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$document = JFactory::getDocument();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("$document->addStyleSheet(\'components/");
    String _name = this.com.getName();
    String _lowerCase = _name.toLowerCase();
    String _nameExtensionBind = Slug.nameExtensionBind("com", _lowerCase);
    _builder.append(_nameExtensionBind, "\t");
    _builder.append("/assets/css/");
    String _name_1 = this.com.getName();
    String _lowerCase_1 = _name_1.toLowerCase();
    _builder.append(_lowerCase_1, "\t");
    _builder.append(".css\');");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("?>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<script type=\"text/javascript\">");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("js = jQuery.noConflict();");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("js(document).ready(function() {");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("});");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("Joomla.submitbutton = function(task)");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("if (task == \'");
    String _name_2 = this.dpage.getName();
    String _lowerCase_2 = _name_2.toLowerCase();
    _builder.append(_lowerCase_2, "\t        ");
    _builder.append(".cancel\') {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t            ");
    _builder.append("Joomla.submitform(task, document.getElementById(\'");
    String _name_3 = this.dpage.getName();
    String _lowerCase_3 = _name_3.toLowerCase();
    _builder.append(_lowerCase_3, "\t            ");
    _builder.append("-form\'));");
    _builder.newLineIfNotEmpty();
    _builder.append("\t        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("else {");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("if (task != \'");
    String _name_4 = this.dpage.getName();
    String _lowerCase_4 = _name_4.toLowerCase();
    _builder.append(_lowerCase_4, "\t            ");
    _builder.append(".cancel\' && document.formvalidator.isValid(document.id(\'");
    String _name_5 = this.dpage.getName();
    String _lowerCase_5 = _name_5.toLowerCase();
    _builder.append(_lowerCase_5, "\t            ");
    _builder.append("-form\'))) {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t                ");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("Joomla.submitform(task, document.getElementById(\'");
    String _name_6 = this.dpage.getName();
    String _lowerCase_6 = _name_6.toLowerCase();
    _builder.append(_lowerCase_6, "\t                ");
    _builder.append("-form\'));");
    _builder.newLineIfNotEmpty();
    _builder.append("\t            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("else {");
    _builder.newLine();
    _builder.append("\t                ");
    _builder.append("alert(\'<?php echo $this->escape(JText::_(\'JGLOBAL_VALIDATION_FORM_FAILED\')); ?>\');");
    _builder.newLine();
    _builder.append("\t            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</script>");
    _builder.newLine();
    _builder.append("\t");
    CharSequence _generateAdminViewLayoutFormular = this.backHelp.generateAdminViewLayoutFormular();
    _builder.append(_generateAdminViewLayoutFormular, "\t");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence generateSiteController(final Boolean isedit) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateFileDoc = this.generateFileDoc(this.dpage, this.com, true);
    _builder.append(_generateFileDoc, "");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("require_once JPATH_COMPONENT . \'/controller.php\';");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* ");
    String _name = this.dpage.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, " ");
    _builder.append(" controller class to ");
    String _xifexpression = null;
    if ((isedit).booleanValue()) {
      _xifexpression = "Edit";
    } else {
      _xifexpression = "Show";
    }
    _builder.append(_xifexpression, " ");
    _builder.append(" a Item .");
    _builder.newLineIfNotEmpty();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("class ");
    String _name_1 = this.com.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "");
    _builder.append("Controller");
    String _xifexpression_1 = null;
    if ((isedit).booleanValue()) {
      String _name_2 = this.dpage.getName();
      String _firstUpper_2 = StringExtensions.toFirstUpper(_name_2);
      _xifexpression_1 = (_firstUpper_2 + "Edit");
    } else {
      String _name_3 = this.dpage.getName();
      _xifexpression_1 = StringExtensions.toFirstUpper(_name_3);
    }
    _builder.append(_xifexpression_1, "");
    _builder.append(" extends ");
    String _name_4 = this.com.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_4);
    _builder.append(_firstUpper_3, "");
    _builder.append("Controller {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteControllerEdit = this.frontHelp.generateSiteControllerEdit(isedit);
    _builder.append(_generateSiteControllerEdit, "\t");
    _builder.newLineIfNotEmpty();
    {
      if ((isedit).booleanValue()) {
        _builder.append("\t");
        CharSequence _generateSiteControllerSave = this.frontHelp.generateSiteControllerSave();
        _builder.append(_generateSiteControllerSave, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        CharSequence _generateSiteControllerCancel = this.frontHelp.generateSiteControllerCancel();
        _builder.append(_generateSiteControllerCancel, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        CharSequence _generateSiteControllerRemove = this.frontHelp.generateSiteControllerRemove();
        _builder.append(_generateSiteControllerRemove, "\t");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("\t");
        CharSequence _generateSiteControllerRemove_1 = this.frontHelp.generateSiteControllerRemove();
        _builder.append(_generateSiteControllerRemove_1, "\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateSiteModelShow() {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateFileDoc = this.generateFileDoc(this.dpage, this.com, true);
    _builder.append(_generateFileDoc, "");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("jimport(\'joomla.application.component.modelitem\');");
    _builder.newLine();
    _builder.append("jimport(\'joomla.event.dispatcher\');");
    _builder.newLine();
    _builder.append("use Joomla\\Utilities\\ArrayHelper;");
    _builder.newLine();
    _builder.append("use Joomla\\Registry\\Registry;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Model to show a Dataitem");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("class ");
    String _name = this.com.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "");
    _builder.append("Model");
    String _name_1 = this.dpage.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "");
    _builder.append(" extends JModelItem {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelPopulatestate = this.frontHelp.generateSiteModelPopulatestate();
    _builder.append(_generateSiteModelPopulatestate, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateModelGetItemFunction = this.generateModelGetItemFunction();
    _builder.append(_generateModelGetItemFunction, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelCheckin = this.frontHelp.generateSiteModelCheckin();
    _builder.append(_generateSiteModelCheckin, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelgetTable = this.frontHelp.generateSiteModelgetTable();
    _builder.append(_generateSiteModelgetTable, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelCheckout = this.frontHelp.generateSiteModelCheckout();
    _builder.append(_generateSiteModelCheckout, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelgetCategory = this.frontHelp.generateSiteModelgetCategory();
    _builder.append(_generateSiteModelgetCategory, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelpublish = this.frontHelp.generateSiteModelpublish();
    _builder.append(_generateSiteModelpublish, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelDelete = this.frontHelp.generateSiteModelDelete();
    _builder.append(_generateSiteModelDelete, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateSiteModelEdit() {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateFileDoc = this.generateFileDoc(this.dpage, this.com, true);
    _builder.append(_generateFileDoc, "");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("jimport(\'joomla.application.component.modelform\');");
    _builder.newLine();
    _builder.append("jimport(\'joomla.event.dispatcher\');");
    _builder.newLine();
    _builder.append("use Joomla\\Utilities\\ArrayHelper;");
    _builder.newLine();
    _builder.append("use Joomla\\Registry\\Registry;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Model to Edit  a Dataitem");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("class ");
    String _name = this.com.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "");
    _builder.append("Model");
    String _name_1 = this.dpage.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "");
    _builder.append("Edit extends JModelForm {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("var $_item = null;");
    _builder.newLine();
    _builder.append("\t");
    CharSequence _generateSiteModelPopulatestate = this.frontHelp.generateSiteModelPopulatestate();
    _builder.append(_generateSiteModelPopulatestate, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelgetData = this.frontHelp.generateSiteModelgetData(Boolean.valueOf(true));
    _builder.append(_generateSiteModelgetData, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelCheckin = this.frontHelp.generateSiteModelCheckin();
    _builder.append(_generateSiteModelCheckin, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelCheckout = this.frontHelp.generateSiteModelCheckout();
    _builder.append(_generateSiteModelCheckout, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelgetTable = this.frontHelp.generateSiteModelgetTable();
    _builder.append(_generateSiteModelgetTable, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateModelGetFormFunction = this.generateModelGetFormFunction();
    _builder.append(_generateModelGetFormFunction, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateModelGetItemFunction = this.generateModelGetItemFunction();
    _builder.append(_generateModelGetItemFunction, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateModelLoadFormDataFunction = this.generateModelLoadFormDataFunction();
    _builder.append(_generateModelLoadFormDataFunction, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelSave = this.frontHelp.generateSiteModelSave();
    _builder.append(_generateSiteModelSave, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    CharSequence _generateSiteModelDelete = this.frontHelp.generateSiteModelDelete();
    _builder.append(_generateSiteModelDelete, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateSiteView(final Boolean isedit) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\t");
    CharSequence _generateFileDoc = this.generateFileDoc(this.dpage, this.com, true);
    _builder.append(_generateFileDoc, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("jimport(\'joomla.application.component.view\');");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* View to ");
    String _xifexpression = null;
    if ((isedit).booleanValue()) {
      _xifexpression = "Edit";
    } else {
      _xifexpression = "Show";
    }
    _builder.append(_xifexpression, " ");
    _builder.append(" edit");
    _builder.newLineIfNotEmpty();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("class ");
    String _name = this.com.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "");
    _builder.append("View");
    String _xifexpression_1 = null;
    if ((isedit).booleanValue()) {
      String _name_1 = this.dpage.getName();
      String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
      _xifexpression_1 = (_firstUpper_1 + "Edit");
    } else {
      String _name_2 = this.dpage.getName();
      _xifexpression_1 = StringExtensions.toFirstUpper(_name_2);
    }
    _builder.append(_xifexpression_1, "");
    _builder.append(" extends JViewLegacy {");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("protected $state;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("protected $item;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("protected $form;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("protected $params;");
    _builder.newLine();
    _builder.append("    ");
    CharSequence _generateSiteViewDisplay = this.frontHelp.generateSiteViewDisplay(isedit);
    _builder.append(_generateSiteViewDisplay, "    ");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    CharSequence _generateSiteViewprepareDocument = this.frontHelp.generateSiteViewprepareDocument();
    _builder.append(_generateSiteViewprepareDocument, "    ");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("} ");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateSiteViewLayoutEdit() {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateFileDoc = this.generateFileDoc(this.dpage, this.com, false);
    _builder.append(_generateFileDoc, "");
    _builder.newLineIfNotEmpty();
    _builder.append("JHtml::_(\'behavior.keepalive\');");
    _builder.newLine();
    _builder.append("JHtml::_(\'behavior.tooltip\');");
    _builder.newLine();
    _builder.append("JHtml::_(\'behavior.formvalidation\');");
    _builder.newLine();
    _builder.append("JHtml::_(\'formbehavior.chosen\', \'select\');");
    _builder.newLine();
    _builder.newLine();
    _builder.append("//Load admin language file");
    _builder.newLine();
    _builder.append("$lang = JFactory::getLanguage();");
    _builder.newLine();
    _builder.append("$lang->load(\'");
    String _name = this.com.getName();
    String _nameExtensionBind = Slug.nameExtensionBind("com", _name);
    String _lowerCase = _nameExtensionBind.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append("\', JPATH_ADMINISTRATOR);");
    _builder.newLineIfNotEmpty();
    _builder.append("$doc = JFactory::getDocument();");
    _builder.newLine();
    _builder.append("$doc->addScript(JUri::base() . \'/components/");
    String _name_1 = this.com.getName();
    String _nameExtensionBind_1 = Slug.nameExtensionBind("com", _name_1);
    String _lowerCase_1 = _nameExtensionBind_1.toLowerCase();
    _builder.append(_lowerCase_1, "");
    _builder.append("/assets/js/form.js\');");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.newLine();
    _builder.append("?>");
    _builder.newLine();
    _builder.append("</style>");
    _builder.newLine();
    _builder.append("<script type=\"text/javascript\">");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("getScript(\'//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\', function() {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("jQuery(document).ready(function() {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("jQuery(\'#form-");
    String _name_2 = this.dpage.getName();
    String _lowerCase_2 = _name_2.toLowerCase();
    _builder.append(_lowerCase_2, "            ");
    _builder.append("\').submit(function(event) {");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("});");
    _builder.newLine();
    _builder.newLine();
    _builder.append("            ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("});");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("});");
    _builder.newLine();
    _builder.newLine();
    _builder.append("</script>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("<div class=\"");
    String _name_3 = this.dpage.getName();
    String _lowerCase_3 = _name_3.toLowerCase();
    _builder.append(_lowerCase_3, "");
    _builder.append("-edit front-end-edit\">");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("<?php if (!empty($this->item->id)): ?>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<h1>Edit <?php echo $this->item->id; ?></h1>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<?php else: ?>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<h1>Add</h1>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<?php endif; ?>");
    _builder.newLine();
    _builder.append("    ");
    CharSequence _generateSiteViewLayoutEditForm = this.frontHelp.generateSiteViewLayoutEditForm();
    _builder.append(_generateSiteViewLayoutEditForm, "    ");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence generateSiteViewLayoutShow() {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateFileDoc = this.generateFileDoc(this.dpage, this.com, false);
    _builder.append(_generateFileDoc, "");
    _builder.newLineIfNotEmpty();
    _builder.append("//Load admin language file");
    _builder.newLine();
    _builder.append("$lang = JFactory::getLanguage();");
    _builder.newLine();
    _builder.append("$lang->load(\'");
    String _name = this.com.getName();
    String _nameExtensionBind = Slug.nameExtensionBind("com", _name);
    String _lowerCase = _nameExtensionBind.toLowerCase();
    _builder.append(_lowerCase, "");
    _builder.append("\', JPATH_ADMINISTRATOR);");
    _builder.newLineIfNotEmpty();
    _builder.append("$canEdit = JFactory::getUser()->authorise(\'core.edit\', \'");
    String _name_1 = this.com.getName();
    String _nameExtensionBind_1 = Slug.nameExtensionBind("com", _name_1);
    String _lowerCase_1 = _nameExtensionBind_1.toLowerCase();
    _builder.append(_lowerCase_1, "");
    _builder.append(".\' . $this->item->id);");
    _builder.newLineIfNotEmpty();
    _builder.append("if (!$canEdit && JFactory::getUser()->authorise(\'core.edit.own\', \'");
    String _name_2 = this.com.getName();
    String _nameExtensionBind_2 = Slug.nameExtensionBind("com", _name_2);
    String _lowerCase_2 = _nameExtensionBind_2.toLowerCase();
    _builder.append(_lowerCase_2, "");
    _builder.append("\' . $this->item->id)) {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("$canEdit = JFactory::getUser()->id == $this->item->created_by;");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("?>");
    _builder.newLine();
    CharSequence _generateSiteViewLayoutShow = this.frontHelp.generateSiteViewLayoutShow();
    _builder.append(_generateSiteViewLayoutShow, "");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
}
